{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karim\\\\Desktop\\\\Project\\\\PrimeTime\\\\client\\\\pages\\\\order\\\\[id].js\";\nvar __jsx = React.createElement;\nimport { Grid, ImageList, List, ListItem, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core';\nimport Axios from 'axios';\nimport { useRouter } from 'next/router';\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\nimport { Card, CardBody, CardText, CardTitle, Col, ListGroup, Row, Table } from 'reactstrap';\nimport CheckoutSteps from '../../components/CheckoutSteps';\nimport MessageBox from '../../components/MessageBox';\nimport CommonLayout from '../../containers/common/common-layout';\nimport { PayPalButtons, usePayPalScriptReducer } from '@paypal/react-paypal-js';\nimport StripeContainer from '../../components/StripeContainer';\nimport { Store } from '../../utils/Store';\nimport NextLink from 'next/link';\nimport { Link } from 'react-router-dom';\nexport default function OrderScreen() {\n  const {\n    state\n  } = useContext(Store);\n  const {\n    cart: {\n      cartItems\n    },\n    userInfo\n  } = state;\n  const router = useRouter();\n  const {\n    id: orderId\n  } = router.query;\n  /* const {\r\n     cart: { shippingAddress },\r\n     \r\n   } = state;*/\n\n  const {\n    0: showItem,\n    1: setShowItem\n  } = useState(false);\n  const {\n    0: order,\n    1: setOrder\n  } = useState({});\n  const {\n    0: taxPrice,\n    1: SettaxPrice\n  } = useState();\n  const {\n    0: paymentMethod,\n    1: SetpaymentMethod\n  } = useState();\n  const {\n    0: shippingAddress,\n    1: SetshippingAddress\n  } = useState({});\n  const {\n    0: orderItems,\n    1: SetorderItems\n  } = useState([]);\n  const {\n    0: totalPrice,\n    1: SettotalPrice\n  } = useState();\n  const {\n    0: itemsPrice,\n    1: SetitemsPrice\n  } = useState();\n  const {\n    0: shippingPrice,\n    1: SetshippingPrice\n  } = useState();\n  const {\n    0: isPaid,\n    1: SetisPaid\n  } = useState();\n  const {\n    0: isDelivered,\n    1: SetisDelivered\n  } = useState();\n  const {\n    0: deliveredAt,\n    1: SetdeliveredAt\n  } = useState();\n  const {\n    0: paidAt,\n    1: SetpaidAt\n  } = useState();\n  useEffect(() => {\n    const fetchOrder = () => {\n      try {\n        Axios.get(`http://localhost:5000/orders/${orderId}`, {\n          headers: {\n            authorization: `Bearer ${userInfo.token}`\n          }\n        }).then(res => {\n          SettaxPrice(res.data.taxPrice);\n          SetpaymentMethod(res.data.paymentMethod);\n          SetshippingAddress(res.data.shippingAddress);\n          SetorderItems(res.data.orderItems);\n          console.log(res.data.orderItems);\n          SettotalPrice(res.data.totalPrice);\n          SetshippingPrice(res.data.shippingPrice);\n          SetitemsPrice(res.data.itemsPrice);\n          SetisPaid(res.data.isPaid);\n          SetisDelivered(res.data.isDelivered);\n          SetdeliveredAt(res.data.deliveredAt);\n          SetpaidAt(res.data.paidAt);\n        });\n      } catch (err) {}\n    };\n\n    if (!userInfo) {\n      return alert(\"Go To Sign In\");\n    }\n\n    if (!order._id || successPay || successDeliver || order._id && order._id !== orderId) {\n      fetchOrder();\n    }\n  }, [userInfo, orderId]);\n  return __jsx(CommonLayout, {\n    title: `Order ${orderId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, __jsx(CheckoutSteps, {\n    activeStep: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 9,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 12\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    component: \"h3\",\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, \"Shipping Address\")), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, shippingAddress.fullName, \", \", shippingAddress.address, \",\", ' ', shippingAddress.city, \", \", shippingAddress.postalCode, \",\", ' ', shippingAddress.country), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"Status:\", ' ', isDelivered ? `delivered at ${deliveredAt}` : 'not delivered'))), __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    component: \"h3\",\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }\n  }, \"Payment Method\")), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, paymentMethod), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"Status: \", isPaid ? `paid at ${paidAt}` : 'not paid'))), __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    component: \"h2\",\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, \"Order Items\")), __jsx(Card, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, \"Items\"), __jsx(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, orderItems.map(item => __jsx(ListItem, {\n    key: item._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, __jsx(Row, {\n    className: \"align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, __jsx(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 23\n    }\n  }, __jsx(\"img\", {\n    src: item.image,\n    alt: item.name,\n    className: \"img-fluid rounded img-thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }), ' '), __jsx(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 23\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, item.quantity)), __jsx(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 23\n    }\n  }, \"$\", item.price)))))))))), __jsx(Grid, {\n    item: true,\n    md: 3,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }, \"Order Summary\")), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 23\n    }\n  }, \"Items Price:\")), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 23\n    }\n  }, \"$\", itemsPrice)))), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 23\n    }\n  }, \"Tax:\")), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 23\n    }\n  }, \"$\", taxPrice)))), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 23\n    }\n  }, \"Shipping:\")), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 23\n    }\n  }, \"$\", shippingPrice)))), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 23\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, \"Total:\"))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 23\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  }, \"$\", totalPrice))))), showItem ? __jsx(StripeContainer, {\n    x: totalPrice,\n    y: orderId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }\n  }) : __jsx(React.Fragment, null, __jsx(\"button\", {\n    onClick: () => setShowItem(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 6\n    }\n  }, \"Go To pay \"))))))));\n}","map":{"version":3,"sources":["C:/Users/Karim/Desktop/Project/PrimeTime/client/pages/order/[id].js"],"names":["Grid","ImageList","List","ListItem","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","Axios","useRouter","React","useContext","useEffect","useReducer","useState","Card","CardBody","CardText","CardTitle","Col","ListGroup","Row","Table","CheckoutSteps","MessageBox","CommonLayout","PayPalButtons","usePayPalScriptReducer","StripeContainer","Store","NextLink","Link","OrderScreen","state","cart","cartItems","userInfo","router","id","orderId","query","showItem","setShowItem","order","setOrder","taxPrice","SettaxPrice","paymentMethod","SetpaymentMethod","shippingAddress","SetshippingAddress","orderItems","SetorderItems","totalPrice","SettotalPrice","itemsPrice","SetitemsPrice","shippingPrice","SetshippingPrice","isPaid","SetisPaid","isDelivered","SetisDelivered","deliveredAt","SetdeliveredAt","paidAt","SetpaidAt","fetchOrder","get","headers","authorization","token","then","res","data","console","log","err","alert","_id","successPay","successDeliver","fullName","address","city","postalCode","country","map","item","image","name","quantity","price"],"mappings":"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","sourcesContent":["import { Grid, ImageList, List, ListItem, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport { useRouter } from 'next/router';\r\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\r\nimport { Card, CardBody, CardText, CardTitle, Col, ListGroup, Row, Table } from 'reactstrap';\r\nimport CheckoutSteps from '../../components/CheckoutSteps';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport CommonLayout from '../../containers/common/common-layout';\r\nimport { PayPalButtons, usePayPalScriptReducer } from '@paypal/react-paypal-js'\r\nimport StripeContainer from '../../components/StripeContainer';\r\n\r\nimport { Store } from '../../utils/Store';\r\nimport NextLink from 'next/link';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function OrderScreen() {\r\n  const { state } = useContext(Store);\r\n  const {cart: {cartItems}, userInfo } = state;\r\n\r\n  const router = useRouter();\r\n    const { id: orderId } = router.query\r\n\r\n    \r\n   /* const {\r\n      cart: { shippingAddress },\r\n      \r\n    } = state;*/\r\n    const [showItem, setShowItem] = useState(false);\r\n    const [ order,setOrder] = useState({});\r\n    \r\n    const [taxPrice,SettaxPrice]=useState();\r\n    const [paymentMethod,SetpaymentMethod]=useState();\r\n    const [shippingAddress,SetshippingAddress]= useState({});\r\n    const [orderItems,SetorderItems]=useState([]);\r\n    const [totalPrice,SettotalPrice]=useState();\r\n    const [itemsPrice,SetitemsPrice]=useState();\r\n    const [shippingPrice,SetshippingPrice]=useState();\r\n    const [isPaid,SetisPaid]=useState();\r\n    const [isDelivered,SetisDelivered]=useState();\r\n    const [deliveredAt,SetdeliveredAt]=useState();\r\n    const [paidAt,SetpaidAt]=useState();\r\n    \r\n    \r\n    \r\n    \r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    const fetchOrder =  () => {\r\n      try {\r\n       \r\n          Axios.get(`http://localhost:5000/orders/${orderId}`, {\r\n          headers: { authorization: `Bearer ${userInfo.token}` },\r\n        }).then( res => {\r\n        \r\n          SettaxPrice(res.data.taxPrice);\r\n          SetpaymentMethod(res.data.paymentMethod);\r\n          SetshippingAddress(res.data.shippingAddress);\r\n          SetorderItems(res.data.orderItems);\r\n          console.log(res.data.orderItems);\r\n          SettotalPrice(res.data.totalPrice);\r\n          SetshippingPrice(res.data.shippingPrice)\r\n          SetitemsPrice(res.data.itemsPrice)\r\n          SetisPaid(res.data.isPaid);\r\n          SetisDelivered(res.data.isDelivered)\r\n          SetdeliveredAt(res.data.deliveredAt)\r\n          SetpaidAt(res.data.paidAt);\r\n         });\r\n        \r\n      } catch (err) {\r\n        \r\n      }\r\n    };\r\n\r\n    if (!userInfo) {\r\n      return alert(\"Go To Sign In\")\r\n    }\r\n    if (!order._id ||\r\n      successPay ||\r\n      successDeliver ||\r\n      (order._id && order._id !== orderId)) {\r\n      fetchOrder();\r\n    }\r\n  }, [userInfo, orderId]);\r\n\r\n  \r\n  return (\r\n    <CommonLayout title={`Order ${orderId}`}>\r\n      <CheckoutSteps activeStep={3}></CheckoutSteps>\r\n      \r\n      <div>\r\n      <Grid container spacing={1}>\r\n          <Grid item md={9} xs={12}>\r\n           <Card>\r\n              <List>\r\n                <ListItem>\r\n                  <Typography component=\"h3\" variant=\"h3\">\r\n                    Shipping Address\r\n                  </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                  {shippingAddress.fullName}, {shippingAddress.address},{' '}\r\n                  {shippingAddress.city}, {shippingAddress.postalCode},{' '}\r\n                  {shippingAddress.country}\r\n                </ListItem>\r\n                <ListItem>\r\n                  Status:{' '}\r\n                  {isDelivered\r\n                    ? `delivered at ${deliveredAt}`\r\n                    : 'not delivered'}\r\n                </ListItem>\r\n              </List>\r\n            </Card>\r\n            <Card>\r\n              <List>\r\n                <ListItem>\r\n                  <Typography component=\"h3\" variant=\"h3\">\r\n                    Payment Method\r\n                  </Typography>\r\n                </ListItem>\r\n                <ListItem>{paymentMethod}</ListItem>\r\n                <ListItem>\r\n                  Status: {isPaid ? `paid at ${paidAt}` : 'not paid'}\r\n                </ListItem>\r\n              </List>\r\n            </Card>\r\n            <Card>\r\n              <List>\r\n                <ListItem>\r\n                  <Typography component=\"h2\" variant=\"h2\">\r\n                    Order Items\r\n                  </Typography>\r\n                </ListItem>\r\n                <Card className=\"mb-3\">\r\n            <CardBody>\r\n              <CardTitle>Items</CardTitle>\r\n              <ListGroup variant=\"flush\">\r\n                {orderItems.map((item) => (\r\n                  <ListItem key={item._id}>\r\n                    <Row className=\"align-items-center\">\r\n                      <Col md={6}>\r\n                        <img\r\n                          src={item.image}\r\n                          alt={item.name}\r\n                          className=\"img-fluid rounded img-thumbnail\"\r\n                        ></img>{' '}\r\n                         \r\n                      </Col>\r\n                      <Col md={3}>\r\n                        <span>{item.quantity}</span>\r\n                      </Col>\r\n                      <Col md={3}>${item.price}</Col>\r\n                    </Row>\r\n                  </ListItem>\r\n                ))}\r\n              </ListGroup>\r\n               \r\n            </CardBody>\r\n          </Card>\r\n              </List>\r\n            </Card>\r\n             \r\n            </Grid>\r\n            <Grid item md={3} xs={12}>\r\n            <Card>\r\n              <List>\r\n                <ListItem>\r\n                  <Typography variant=\"h3\">Order Summary</Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Grid container>\r\n                    <Grid item xs={6}>\r\n                      <Typography>Items Price:</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography align=\"right\">${itemsPrice}</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Grid container>\r\n                    <Grid item xs={6}>\r\n                      <Typography>Tax:</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography align=\"right\">${taxPrice}</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Grid container>\r\n                    <Grid item xs={6}>\r\n                      <Typography>Shipping:</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography align=\"right\">${shippingPrice}</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Grid container>\r\n                    <Grid item xs={6}>\r\n                      <Typography>\r\n                        <strong>Total:</strong>\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography align=\"right\">\r\n                        <strong>${totalPrice}</strong>\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </ListItem>\r\n                {showItem ? (\r\n\t\t\t\t<StripeContainer x={totalPrice} y={orderId} />\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button onClick={() => setShowItem(true)}>Go To pay </button>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n              </List>\r\n            </Card>\r\n          </Grid>\r\n            </Grid>\r\n            </div>\r\n    \r\n  </CommonLayout>\r\n    \r\n  \r\n     \r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}