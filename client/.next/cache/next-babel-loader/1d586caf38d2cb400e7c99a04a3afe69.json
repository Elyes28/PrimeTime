{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karim\\\\Documents\\\\GitHub\\\\PrimeTime\\\\client\\\\pages\\\\order\\\\[id].js\";\nvar __jsx = React.createElement;\nimport { Grid, ImageList, List, ListItem, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core';\nimport Axios from 'axios';\nimport { useRouter } from 'next/router';\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\nimport { Card, CardBody, CardText, CardTitle, Col, ListGroup, Row, Table } from 'reactstrap';\nimport CheckoutSteps from '../../components/CheckoutSteps';\nimport MessageBox from '../../components/MessageBox';\nimport CommonLayout from '../../containers/common/common-layout';\nimport { Store } from '../../utils/Store';\nimport NextLink from 'next/link';\nimport { Link } from 'react-router-dom';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"#c4f0ff\",\n      color: \"#000\",\n      fontWeight: 500,\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkit-autofill\": {\n        color: \"#fce883\"\n      },\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\"\n    }\n  }\n};\nexport default function OrderScreen() {\n  const {\n    state\n  } = useContext(Store);\n  const {\n    cart: {\n      cartItems\n    },\n    userInfo\n  } = state;\n  const {\n    0: success,\n    1: setSuccess\n  } = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  var c = 2.8;\n  console.log(c);\n  const router = useRouter();\n  const {\n    id: orderId\n  } = router.query;\n  /* const {\r\n     cart: { shippingAddress },\r\n     \r\n   } = state;*/\n\n  const {\n    0: showItem,\n    1: setShowItem\n  } = useState(false);\n  const {\n    0: order,\n    1: setOrder\n  } = useState({});\n  const {\n    0: taxPrice,\n    1: SettaxPrice\n  } = useState();\n  const {\n    0: paymentMethod,\n    1: SetpaymentMethod\n  } = useState();\n  const {\n    0: shippingAddress,\n    1: SetshippingAddress\n  } = useState({});\n  const {\n    0: orderItems,\n    1: SetorderItems\n  } = useState([]);\n  const {\n    0: totalPrice,\n    1: SettotalPrice\n  } = useState();\n  const {\n    0: itemsPrice,\n    1: SetitemsPrice\n  } = useState();\n  const {\n    0: shippingPrice,\n    1: SetshippingPrice\n  } = useState();\n  const {\n    0: isPaid,\n    1: SetisPaid\n  } = useState();\n  const {\n    0: isDelivered,\n    1: SetisDelivered\n  } = useState();\n  const {\n    0: deliveredAt,\n    1: SetdeliveredAt\n  } = useState();\n  const {\n    0: paidAt,\n    1: SetpaidAt\n  } = useState();\n\n  const update = async () => {\n    const response = await Axios.put(`http://localhost:5000/orders/${orderId}/pay`, {});\n\n    if (response.data.success) {\n      console.log(\"paid\");\n      setSuccess(true);\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n    console.log(totalPrice);\n    const {\n      id\n    } = paymentMethod;\n    console.log(id);\n    const response = await Axios.post(\"http://localhost:5000/orders/payment\", {\n      amount: totalPrice * 1000,\n      id\n    });\n    update();\n\n    if (response.data.success) {\n      console.log(\"Successful payment\");\n      setSuccess(true);\n    }\n  };\n\n  useEffect(() => {\n    const fetchOrder = () => {\n      try {\n        Axios.get(`http://localhost:5000/orders/${orderId}`, {\n          headers: {\n            authorization: `Bearer ${userInfo.token}`\n          }\n        }).then(res => {\n          SettaxPrice(res.data.taxPrice);\n          SetpaymentMethod(res.data.paymentMethod);\n          SetshippingAddress(res.data.shippingAddress);\n          SetorderItems(res.data.orderItems);\n          console.log(res.data.orderItems);\n          SettotalPrice(res.data.totalPrice);\n          SetshippingPrice(res.data.shippingPrice);\n          SetitemsPrice(res.data.itemsPrice);\n          SetisPaid(res.data.isPaid);\n          SetisDelivered(res.data.isDelivered);\n          SetdeliveredAt(res.data.deliveredAt);\n          SetpaidAt(res.data.paidAt);\n        });\n      } catch (err) {}\n    };\n\n    if (!userInfo) {\n      return alert(\"Go To Sign In\");\n    }\n\n    if (!order._id || successPay || successDeliver || order._id && order._id !== orderId) {\n      fetchOrder();\n    }\n  }, [userInfo, orderId]);\n  return __jsx(CommonLayout, {\n    title: `Order ${orderId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, __jsx(CheckoutSteps, {\n    activeStep: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 9,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 12\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    component: \"h3\",\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }, \"Shipping Address\")), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, shippingAddress.fullName, \", \", shippingAddress.address, \",\", ' ', shippingAddress.city, \", \", shippingAddress.postalCode, \",\", ' ', shippingAddress.country), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, \"Status:\", ' ', isDelivered ? `delivered at ${deliveredAt}` : 'not delivered'))), __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    component: \"h3\",\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  }, \"Payment Method\")), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, paymentMethod), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, \"Status: \", isPaid ? `paid at ${paidAt}` : 'not paid'))), __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    component: \"h2\",\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  }, \"Order Items\")), __jsx(Card, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, \"Items\"), __jsx(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, orderItems.map(item => __jsx(ListItem, {\n    key: item._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 19\n    }\n  }, __jsx(Row, {\n    className: \"align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, __jsx(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 23\n    }\n  }, __jsx(\"img\", {\n    src: item.image,\n    alt: item.name,\n    className: \"img-fluid rounded img-thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }), ' '), __jsx(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 23\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 25\n    }\n  }, item.quantity)), __jsx(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 23\n    }\n  }, \"$\", item.price)))))))))), __jsx(Grid, {\n    item: true,\n    md: 3,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 19\n    }\n  }, \"Order Summary\")), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 19\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 23\n    }\n  }, \"Items Price:\")), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 23\n    }\n  }, \"$\", itemsPrice)))), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 19\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 23\n    }\n  }, \"Tax:\")), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 23\n    }\n  }, \"$\", taxPrice)))), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 19\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 23\n    }\n  }, \"Shipping:\")), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 23\n    }\n  }, \"$\", shippingPrice)))), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 19\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 23\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 25\n    }\n  }, \"Total:\"))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 23\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 25\n    }\n  }, \"$\", totalPrice))))), showItem ? __jsx(React.Fragment, null, !success ? __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }, __jsx(\"fieldset\", {\n    className: \"FormGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"FormRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, __jsx(CardElement, {\n    options: CARD_OPTIONS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 21\n    }\n  }))), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, \"Pay\")) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 8\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 12\n    }\n  }, \"You just bought a sweet spatula congrats this is the best decision of you're life\"))) : __jsx(React.Fragment, null, __jsx(\"button\", {\n    onClick: () => setShowItem(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 6\n    }\n  }, \"Go To pay \"))))))));\n}","map":{"version":3,"sources":["C:/Users/Karim/Documents/GitHub/PrimeTime/client/pages/order/[id].js"],"names":["Grid","ImageList","List","ListItem","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","Axios","useRouter","React","useContext","useEffect","useReducer","useState","Card","CardBody","CardText","CardTitle","Col","ListGroup","Row","Table","CheckoutSteps","MessageBox","CommonLayout","Store","NextLink","Link","CardElement","useElements","useStripe","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","OrderScreen","state","cart","cartItems","userInfo","success","setSuccess","stripe","elements","c","console","log","router","id","orderId","query","showItem","setShowItem","order","setOrder","taxPrice","SettaxPrice","paymentMethod","SetpaymentMethod","shippingAddress","SetshippingAddress","orderItems","SetorderItems","totalPrice","SettotalPrice","itemsPrice","SetitemsPrice","shippingPrice","SetshippingPrice","isPaid","SetisPaid","isDelivered","SetisDelivered","deliveredAt","SetdeliveredAt","paidAt","SetpaidAt","update","response","put","data","handleSubmit","e","preventDefault","error","createPaymentMethod","type","card","getElement","post","amount","fetchOrder","get","headers","authorization","token","then","res","err","alert","_id","successPay","successDeliver","fullName","address","city","postalCode","country","map","item","image","name","quantity","price"],"mappings":"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","sourcesContent":["import { Grid, ImageList, List, ListItem, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport { useRouter } from 'next/router';\r\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\r\nimport { Card, CardBody, CardText, CardTitle, Col, ListGroup, Row, Table } from 'reactstrap';\r\nimport CheckoutSteps from '../../components/CheckoutSteps';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport CommonLayout from '../../containers/common/common-layout';\r\n\r\n \r\nimport { Store } from '../../utils/Store';\r\nimport NextLink from 'next/link';\r\nimport { Link } from 'react-router-dom';\r\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\r\n\r\nconst CARD_OPTIONS = {\r\n\ticonStyle: \"solid\",\r\n\tstyle: {\r\n\t\tbase: {\r\n\t\t\ticonColor: \"#c4f0ff\",\r\n\t\t\tcolor: \"#000\",\r\n\t\t\tfontWeight: 500,\r\n\t\t\tfontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\r\n\t\t\tfontSize: \"16px\",\r\n\t\t\tfontSmoothing: \"antialiased\",\r\n\t\t\t\":-webkit-autofill\": { color: \"#fce883\" },\r\n\t\t\t\"::placeholder\": { color: \"#87bbfd\" }\r\n\t\t},\r\n\t\tinvalid: {\r\n\t\t\ticonColor: \"#ffc7ee\",\r\n\t\t\tcolor: \"#ffc7ee\"\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default function OrderScreen() {\r\n  const { state } = useContext(Store);\r\n  const {cart: {cartItems}, userInfo } = state;\r\n  const [success, setSuccess ] = useState(false)\r\n  const stripe = useStripe()\r\n  const elements = useElements()\r\n  var c=2.8;\r\n  console.log(c);\r\n\r\n  const router = useRouter();\r\n    const { id: orderId } = router.query\r\n\r\n    \r\n   /* const {\r\n      cart: { shippingAddress },\r\n      \r\n    } = state;*/\r\n    const [showItem, setShowItem] = useState(false);\r\n    const [ order,setOrder] = useState({});\r\n    \r\n    const [taxPrice,SettaxPrice]=useState();\r\n    const [paymentMethod,SetpaymentMethod]=useState();\r\n    const [shippingAddress,SetshippingAddress]= useState({});\r\n    const [orderItems,SetorderItems]=useState([]);\r\n    const [totalPrice,SettotalPrice]=useState();\r\n    const [itemsPrice,SetitemsPrice]=useState();\r\n    const [shippingPrice,SetshippingPrice]=useState();\r\n    const [isPaid,SetisPaid]=useState();\r\n    const [isDelivered,SetisDelivered]=useState();\r\n    const [deliveredAt,SetdeliveredAt]=useState();\r\n    const [paidAt,SetpaidAt]=useState();\r\n\r\n\r\n\r\n\r\n\r\n    const update = async () => {\r\n      const response = await Axios.put(`http://localhost:5000/orders/${orderId}/pay`, {\r\n         \r\n      }) \r\n      \r\n      if(response.data.success) {\r\n          console.log(\"paid\")\r\n          setSuccess(true)\r\n      }\r\n\r\n  }\r\n  const handleSubmit = async (e) => {\r\n      e.preventDefault()\r\n      const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n          type: \"card\",\r\n          card: elements.getElement(CardElement)\r\n      })\r\n\r\n\r\n   \r\n       console.log(totalPrice);\r\n          const {id} = paymentMethod\r\n          console.log(id)\r\n          const response = await Axios.post(\"http://localhost:5000/orders/payment\", {\r\n              amount: totalPrice*1000,\r\n              id\r\n          })\r\n          update();\r\n\r\n          if(response.data.success) {\r\n              console.log(\"Successful payment\")\r\n              setSuccess(true)\r\n          }\r\n\r\n      \r\n  \r\n}\r\n    \r\n    \r\n    \r\n    \r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    const fetchOrder =  () => {\r\n      try {\r\n       \r\n          Axios.get(`http://localhost:5000/orders/${orderId}`, {\r\n          headers: { authorization: `Bearer ${userInfo.token}` },\r\n        }).then( res => {\r\n        \r\n          SettaxPrice(res.data.taxPrice);\r\n          SetpaymentMethod(res.data.paymentMethod);\r\n          SetshippingAddress(res.data.shippingAddress);\r\n          SetorderItems(res.data.orderItems);\r\n          console.log(res.data.orderItems);\r\n          SettotalPrice(res.data.totalPrice);\r\n          SetshippingPrice(res.data.shippingPrice)\r\n          SetitemsPrice(res.data.itemsPrice)\r\n          SetisPaid(res.data.isPaid);\r\n          SetisDelivered(res.data.isDelivered)\r\n          SetdeliveredAt(res.data.deliveredAt)\r\n          SetpaidAt(res.data.paidAt);\r\n         });\r\n        \r\n      } catch (err) {\r\n        \r\n      }\r\n    };\r\n\r\n    if (!userInfo) {\r\n      return alert(\"Go To Sign In\")\r\n    }\r\n    if (!order._id ||\r\n      successPay ||\r\n      successDeliver ||\r\n      (order._id && order._id !== orderId)) {\r\n      fetchOrder();\r\n    }\r\n  }, [userInfo, orderId]);\r\n\r\n  \r\n  return (\r\n    <CommonLayout title={`Order ${orderId}`}>\r\n      <CheckoutSteps activeStep={3}></CheckoutSteps>\r\n      \r\n      <div>\r\n      <Grid container spacing={1}>\r\n          <Grid item md={9} xs={12}>\r\n           <Card>\r\n              <List>\r\n                <ListItem>\r\n                  <Typography component=\"h3\" variant=\"h3\">\r\n                    Shipping Address\r\n                  </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                  {shippingAddress.fullName}, {shippingAddress.address},{' '}\r\n                  {shippingAddress.city}, {shippingAddress.postalCode},{' '}\r\n                  {shippingAddress.country}\r\n                </ListItem>\r\n                <ListItem>\r\n                  Status:{' '}\r\n                  {isDelivered\r\n                    ? `delivered at ${deliveredAt}`\r\n                    : 'not delivered'}\r\n                </ListItem>\r\n              </List>\r\n            </Card>\r\n            <Card>\r\n              <List>\r\n                <ListItem>\r\n                  <Typography component=\"h3\" variant=\"h3\">\r\n                    Payment Method\r\n                  </Typography>\r\n                </ListItem>\r\n                <ListItem>{paymentMethod}</ListItem>\r\n                <ListItem>\r\n                  Status: {isPaid ? `paid at ${paidAt}` : 'not paid'}\r\n                </ListItem>\r\n              </List>\r\n            </Card>\r\n            <Card>\r\n              <List>\r\n                <ListItem>\r\n                  <Typography component=\"h2\" variant=\"h2\">\r\n                    Order Items\r\n                  </Typography>\r\n                </ListItem>\r\n                <Card className=\"mb-3\">\r\n            <CardBody>\r\n              <CardTitle>Items</CardTitle>\r\n              <ListGroup variant=\"flush\">\r\n                {orderItems.map((item) => (\r\n                  <ListItem key={item._id}>\r\n                    <Row className=\"align-items-center\">\r\n                      <Col md={6}>\r\n                        <img\r\n                          src={item.image}\r\n                          alt={item.name}\r\n                          className=\"img-fluid rounded img-thumbnail\"\r\n                        ></img>{' '}\r\n                         \r\n                      </Col>\r\n                      <Col md={3}>\r\n                        <span>{item.quantity}</span>\r\n                      </Col>\r\n                      <Col md={3}>${item.price}</Col>\r\n                    </Row>\r\n                  </ListItem>\r\n                ))}\r\n              </ListGroup>\r\n               \r\n            </CardBody>\r\n          </Card>\r\n              </List>\r\n            </Card>\r\n             \r\n            </Grid>\r\n            <Grid item md={3} xs={12}>\r\n            <Card>\r\n              <List>\r\n                <ListItem>\r\n                  <Typography variant=\"h3\">Order Summary</Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Grid container>\r\n                    <Grid item xs={6}>\r\n                      <Typography>Items Price:</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography align=\"right\">${itemsPrice}</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Grid container>\r\n                    <Grid item xs={6}>\r\n                      <Typography>Tax:</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography align=\"right\">${taxPrice}</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Grid container>\r\n                    <Grid item xs={6}>\r\n                      <Typography>Shipping:</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography align=\"right\">${shippingPrice}</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Grid container>\r\n                    <Grid item xs={6}>\r\n                      <Typography>\r\n                        <strong>Total:</strong>\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography align=\"right\">\r\n                        <strong>${totalPrice}</strong>\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </ListItem>\r\n                {showItem ? (\r\n\t\t\t\t<>\r\n        {!success ? \r\n        <form onSubmit={handleSubmit}>\r\n            <fieldset className=\"FormGroup\">\r\n                <div className=\"FormRow\">\r\n                    <CardElement options={CARD_OPTIONS}/>\r\n                </div>\r\n            </fieldset>\r\n            <button>Pay</button>\r\n        </form>\r\n        :\r\n       <div>\r\n           <h2>You just bought a sweet spatula congrats this is the best decision of you're life</h2>\r\n       </div> \r\n        }\r\n            \r\n        </>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button onClick={() => setShowItem(true)}>Go To pay </button>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n              </List>\r\n            </Card>\r\n          </Grid>\r\n            </Grid>\r\n            </div>\r\n    \r\n  </CommonLayout>\r\n    \r\n  \r\n     \r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}