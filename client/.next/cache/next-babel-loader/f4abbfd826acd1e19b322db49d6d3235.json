{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karim\\\\Desktop\\\\Project\\\\PrimeTime\\\\client\\\\pages\\\\order\\\\[id].js\";\nvar __jsx = React.createElement;\nimport { List, ListItem, Typography } from '@material-ui/core';\nimport Axios from 'axios';\nimport { useRouter } from 'next/router';\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\nimport { Card, CardBody, CardText, CardTitle, Col, ListGroup, Row } from 'reactstrap';\nimport MessageBox from '../../components/MessageBox';\nimport { Store } from '../../utils/Store';\nexport default function OrderScreen() {\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const router = useRouter();\n  const {\n    id: orderId\n  } = router.query;\n  const {\n    0: order,\n    1: setOrder\n  } = useState({});\n  const {\n    shippingAddress,\n    paymentMethod,\n    orderItems,\n    itemsPrice,\n    taxPrice,\n    shippingPrice,\n    totalPrice,\n    isPaid,\n    isDelivered\n  } = order;\n  useEffect(() => {\n    const fetchOrder = () => {\n      try {\n        Axios.get(`http://localhost:5000/orders/${orderId}`, {\n          headers: {\n            authorization: `Bearer ${userInfo.token}`\n          }\n        }).then(res => {\n          setOrder(res.data);\n          console.log(\"success\");\n          console.log(res.data);\n        });\n      } catch (err) {}\n    };\n\n    if (!userInfo) {\n      return alert(\"Go To Sign In\");\n    }\n\n    if (!order._id || order._id && order._id !== orderId) {\n      fetchOrder();\n    }\n  }, [order, userInfo, orderId]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, __jsx(\"h5\", {\n    className: \"my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Order \", orderId), __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 9,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    component: \"h2\",\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }, \"Shipping Address\")), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Status:\", ' ', isDelivered ? `delivered at ${deliveredAt}` : 'not delivered'))), __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    component: \"h2\",\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, \"Payment Method\")), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, paymentMethod), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Status: \", isPaid ? `paid at ${paidAt}` : 'not paid'))), \">\"));\n}","map":{"version":3,"sources":["C:/Users/Karim/Desktop/Project/PrimeTime/client/pages/order/[id].js"],"names":["List","ListItem","Typography","Axios","useRouter","React","useContext","useEffect","useReducer","useState","Card","CardBody","CardText","CardTitle","Col","ListGroup","Row","MessageBox","Store","OrderScreen","state","userInfo","router","id","orderId","query","order","setOrder","shippingAddress","paymentMethod","orderItems","itemsPrice","taxPrice","shippingPrice","totalPrice","isPaid","isDelivered","fetchOrder","get","headers","authorization","token","then","res","data","console","log","err","alert","_id","deliveredAt","paidAt"],"mappings":"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","sourcesContent":["import { List, ListItem, Typography } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport { useRouter } from 'next/router';\r\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\r\nimport { Card, CardBody, CardText, CardTitle, Col, ListGroup, Row } from 'reactstrap';\r\nimport MessageBox from '../../components/MessageBox';\r\n\r\nimport { Store } from '../../utils/Store';\r\n\r\n\r\n\r\nexport default function OrderScreen() {\r\n  const { state } = useContext(Store);\r\n  const { userInfo } = state;\r\n\r\n  const router = useRouter();\r\n    const { id: orderId } = router.query\r\n \r\n\r\n  const [ order,setOrder] = useState({});\r\n\r\n  const {\r\n    shippingAddress,\r\n    paymentMethod,\r\n    orderItems,\r\n    itemsPrice,\r\n    taxPrice,\r\n    shippingPrice,\r\n    totalPrice,\r\n    isPaid,\r\n    isDelivered,\r\n  } = order;\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchOrder =  () => {\r\n      try {\r\n       \r\n          Axios.get(`http://localhost:5000/orders/${orderId}`, {\r\n          headers: { authorization: `Bearer ${userInfo.token}` },\r\n        }).then( res => {\r\n          setOrder(res.data);\r\n          console.log(\"success\");\r\n          console.log(res.data);\r\n          \r\n         \r\n         });\r\n        \r\n      } catch (err) {\r\n        \r\n      }\r\n    };\r\n\r\n    if (!userInfo) {\r\n      return alert(\"Go To Sign In\")\r\n    }\r\n    if (!order._id || (order._id && order._id !== orderId)) {\r\n      fetchOrder();\r\n    }\r\n  }, [order, userInfo, orderId]);\r\n  return (\r\n    <div>\r\n      <h5 className=\"my-3\">Order {orderId}</h5>\r\n      <Grid container spacing={1}>\r\n          <Grid item md={9} xs={12}></Grid>\r\n      <Card>\r\n              <List>\r\n                <ListItem>\r\n                  <Typography component=\"h2\" variant=\"h2\">\r\n                    Shipping Address\r\n                  </Typography>\r\n                </ListItem>\r\n                 \r\n                <ListItem>\r\n                  Status:{' '}\r\n                  {isDelivered\r\n                    ? `delivered at ${deliveredAt}`\r\n                    : 'not delivered'}\r\n                </ListItem>\r\n              </List>\r\n            </Card>\r\n            <Card>\r\n              <List>\r\n                <ListItem>\r\n                  <Typography component=\"h2\" variant=\"h2\">\r\n                    Payment Method\r\n                  </Typography>\r\n                </ListItem>\r\n                <ListItem>{paymentMethod}</ListItem>\r\n                <ListItem>\r\n                  Status: {isPaid ? `paid at ${paidAt}` : 'not paid'}\r\n                </ListItem>\r\n              </List>\r\n            </Card>\r\n            ></Grid>\r\n    \r\n  </div>\r\n    \r\n  \r\n     \r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}