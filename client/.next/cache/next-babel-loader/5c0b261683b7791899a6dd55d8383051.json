{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karim\\\\Desktop\\\\Project\\\\PrimeTime\\\\client\\\\pages\\\\order\\\\[id].js\";\nvar __jsx = React.createElement;\nimport { ListItem } from '@material-ui/core';\nimport Axios from 'axios';\nimport { useRouter } from 'next/router';\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\nimport { Card, CardBody, CardText, CardTitle, Col, ListGroup, Row } from 'reactstrap';\nimport MessageBox from '../../components/MessageBox';\nimport { Store } from '../../utils/Store';\nexport default function OrderScreen() {\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const router = useRouter();\n  const {\n    id: orderId\n  } = router.query;\n  const {\n    0: order,\n    1: setOrder\n  } = useState({});\n  useEffect(() => {\n    const fetchOrder = () => {\n      try {\n        Axios.get(`http://localhost:5000/orders/${orderId}`, {\n          headers: {\n            authorization: `Bearer ${userInfo.token}`\n          }\n        }).then(res => {\n          setOrder(res.data);\n          console.log(\"success\");\n          console.log(res.data);\n        });\n      } catch (err) {}\n    };\n\n    if (!userInfo) {\n      return alert(\"Go To Sign In\");\n    }\n\n    if (!order._id || order._id && order._id !== orderId) {\n      fetchOrder();\n    }\n  }, [order, userInfo, orderId]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, __jsx(\"h5\", {\n    className: \"my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Order \", orderId), __jsx(Card, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"Items\"), __jsx(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, order.orderItems.map(item => __jsx(ListGroup.Item, {\n    key: item._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }, __jsx(Row, {\n    className: \"align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, __jsx(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }\n  }, __jsx(\"img\", {\n    src: item.image,\n    alt: item.productName,\n    className: \"img-fluid rounded img-thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }), ' ', __jsx(Link, {\n    to: `/product/${item.slug}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, item.name)), __jsx(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 23\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, item.quantity)), __jsx(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }\n  }, \"$\", item.price))))))));\n}","map":{"version":3,"sources":["C:/Users/Karim/Desktop/Project/PrimeTime/client/pages/order/[id].js"],"names":["ListItem","Axios","useRouter","React","useContext","useEffect","useReducer","useState","Card","CardBody","CardText","CardTitle","Col","ListGroup","Row","MessageBox","Store","OrderScreen","state","userInfo","router","id","orderId","query","order","setOrder","fetchOrder","get","headers","authorization","token","then","res","data","console","log","err","alert","_id","orderItems","map","item","image","productName","slug","name","quantity","price"],"mappings":"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","sourcesContent":["import { ListItem } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport { useRouter } from 'next/router';\r\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\r\nimport { Card, CardBody, CardText, CardTitle, Col, ListGroup, Row } from 'reactstrap';\r\nimport MessageBox from '../../components/MessageBox';\r\n\r\nimport { Store } from '../../utils/Store';\r\n\r\n\r\n\r\nexport default function OrderScreen() {\r\n  const { state } = useContext(Store);\r\n  const { userInfo } = state;\r\n\r\n  const router = useRouter();\r\n    const { id: orderId } = router.query\r\n \r\n\r\n  const [ order,setOrder] = useState({});\r\n\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n    const fetchOrder =  () => {\r\n      try {\r\n       \r\n          Axios.get(`http://localhost:5000/orders/${orderId}`, {\r\n          headers: { authorization: `Bearer ${userInfo.token}` },\r\n        }).then( res => {\r\n          setOrder(res.data);\r\n          console.log(\"success\");\r\n          console.log(res.data);\r\n          \r\n         \r\n         });\r\n        \r\n      } catch (err) {\r\n        \r\n      }\r\n    };\r\n\r\n    if (!userInfo) {\r\n      return alert(\"Go To Sign In\")\r\n    }\r\n    if (!order._id || (order._id && order._id !== orderId)) {\r\n      fetchOrder();\r\n    }\r\n  }, [order, userInfo, orderId]);\r\n  return (\r\n    <div>\r\n      <h5 className=\"my-3\">Order {orderId}</h5>\r\n      <Card className=\"mb-3\">\r\n            <CardBody>\r\n              <CardTitle>Items</CardTitle>\r\n              <ListGroup variant=\"flush\">\r\n                {order.orderItems.map((item) => (\r\n                  <ListGroup.Item key={item._id}>\r\n                    <Row className=\"align-items-center\">\r\n                      <Col md={6}>\r\n                        <img\r\n                          src={item.image}\r\n                          alt={item.productName}\r\n                          className=\"img-fluid rounded img-thumbnail\"\r\n                        ></img>{' '}\r\n                        <Link to={`/product/${item.slug}`}>{item.name}</Link>\r\n                      </Col>\r\n                      <Col md={3}>\r\n                        <span>{item.quantity}</span>\r\n                      </Col>\r\n                      <Col md={3}>${item.price}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            </CardBody>\r\n          </Card>\r\n    \r\n  </div>\r\n    \r\n  \r\n     \r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}