{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karim\\\\Desktop\\\\Project\\\\PrimeTime\\\\client\\\\pages\\\\order\\\\[id].js\";\nvar __jsx = React.createElement;\nimport { ListItem } from '@material-ui/core';\nimport Axios from 'axios';\nimport { useRouter } from 'next/router';\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\nimport { Card, CardBody, CardText, CardTitle, Col, ListGroup, Row } from 'reactstrap';\nimport MessageBox from '../../components/MessageBox';\nimport { Store } from '../../utils/Store';\nexport default function OrderScreen() {\n  var _useContext = useContext(Store),\n      state = _useContext.state;\n\n  var userInfo = state.userInfo;\n  var router = useRouter();\n  var orderId = router.query.id;\n\n  var _useState = useState({}),\n      order = _useState[0],\n      setOrder = _useState[1];\n\n  useEffect(function () {\n    var fetchOrder = function fetchOrder() {\n      try {\n        Axios.get(\"http://localhost:5000/orders/\".concat(orderId), {\n          headers: {\n            authorization: \"Bearer \".concat(userInfo.token)\n          }\n        }).then(function (res) {\n          setOrder(res.data);\n          console.log(\"success\");\n          console.log(res.data);\n        });\n      } catch (err) {}\n    };\n\n    if (!userInfo) {\n      return alert(\"Go To Sign In\");\n    }\n\n    if (!order._id || order._id && order._id !== orderId) {\n      fetchOrder();\n    }\n  }, [order, userInfo, orderId]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(\"h5\", {\n    className: \"my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Order \", orderId), __jsx(Card, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"Shipping\"), __jsx(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Name:\"), \" \", order.shippingAddress.fullName, \" \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 73\n    }\n  }), __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Address: \"), \" \", order.shippingAddress.address, \",\", order.shippingAddress.city, \", \", order.shippingAddress.postalCode, \",\", order.shippingAddress.country), order.isDelivered ? __jsx(MessageBox, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"Delivered at \", order.deliveredAt) : __jsx(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Not Delivered\"))));\n}","map":{"version":3,"sources":["C:/Users/Karim/Desktop/Project/PrimeTime/client/pages/order/[id].js"],"names":["ListItem","Axios","useRouter","React","useContext","useEffect","useReducer","useState","Card","CardBody","CardText","CardTitle","Col","ListGroup","Row","MessageBox","Store","OrderScreen","state","userInfo","router","orderId","query","id","order","setOrder","fetchOrder","get","headers","authorization","token","then","res","data","console","log","err","alert","_id","shippingAddress","fullName","address","city","postalCode","country","isDelivered","deliveredAt"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,mBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,UAAvC,EAAmDC,QAAnD,QAAmE,OAAnE;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,QAAzB,EAAmCC,SAAnC,EAA8CC,GAA9C,EAAmDC,SAAnD,EAA8DC,GAA9D,QAAyE,YAAzE;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA,SAASC,KAAT,QAAsB,mBAAtB;AAIA,eAAe,SAASC,WAAT,GAAuB;AACpC,oBAAkBb,UAAU,CAACY,KAAD,CAA5B;AAAA,MAAQE,KAAR,eAAQA,KAAR;;AACA,MAAQC,QAAR,GAAqBD,KAArB,CAAQC,QAAR;AAEA,MAAMC,MAAM,GAAGlB,SAAS,EAAxB;AACE,MAAYmB,OAAZ,GAAwBD,MAAM,CAACE,KAA/B,CAAQC,EAAR;;AAGF,kBAA0BhB,QAAQ,CAAC,EAAD,CAAlC;AAAA,MAAQiB,KAAR;AAAA,MAAcC,QAAd;;AAEApB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMqB,UAAU,GAAI,SAAdA,UAAc,GAAM;AACxB,UAAI;AAEAzB,QAAAA,KAAK,CAAC0B,GAAN,wCAA0CN,OAA1C,GAAqD;AACrDO,UAAAA,OAAO,EAAE;AAAEC,YAAAA,aAAa,mBAAYV,QAAQ,CAACW,KAArB;AAAf;AAD4C,SAArD,EAECC,IAFD,CAEO,UAAAC,GAAG,EAAI;AACdP,UAAAA,QAAQ,CAACO,GAAG,CAACC,IAAL,CAAR;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AAGA,SARA;AAUH,OAZD,CAYE,OAAOG,GAAP,EAAY,CAEb;AACF,KAhBD;;AAkBA,QAAI,CAACjB,QAAL,EAAe;AACb,aAAOkB,KAAK,CAAC,eAAD,CAAZ;AACD;;AACD,QAAI,CAACb,KAAK,CAACc,GAAP,IAAed,KAAK,CAACc,GAAN,IAAad,KAAK,CAACc,GAAN,KAAcjB,OAA9C,EAAwD;AACtDK,MAAAA,UAAU;AACX;AACF,GAzBQ,EAyBN,CAACF,KAAD,EAAQL,QAAR,EAAkBE,OAAlB,CAzBM,CAAT;AA0BA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA4BA,OAA5B,CADF,EAGE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,OAC0BG,KAAK,CAACe,eAAN,CAAsBC,QADhD,OAC0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD1D,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,OAE8BhB,KAAK,CAACe,eAAN,CAAsBE,OAFpD,OAGGjB,KAAK,CAACe,eAAN,CAAsBG,IAHzB,QAGiClB,KAAK,CAACe,eAAN,CAAsBI,UAHvD,OAIInB,KAAK,CAACe,eAAN,CAAsBK,OAJ1B,CAFF,EAQGpB,KAAK,CAACqB,WAAN,GACC,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACgBrB,KAAK,CAACsB,WADtB,CADD,GAKC,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAbJ,CADN,CAHF,CADF;AA6BD","sourcesContent":["import { ListItem } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport { useRouter } from 'next/router';\r\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\r\nimport { Card, CardBody, CardText, CardTitle, Col, ListGroup, Row } from 'reactstrap';\r\nimport MessageBox from '../../components/MessageBox';\r\n\r\nimport { Store } from '../../utils/Store';\r\n\r\n\r\n\r\nexport default function OrderScreen() {\r\n  const { state } = useContext(Store);\r\n  const { userInfo } = state;\r\n\r\n  const router = useRouter();\r\n    const { id: orderId } = router.query\r\n \r\n\r\n  const [ order,setOrder] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchOrder =  () => {\r\n      try {\r\n       \r\n          Axios.get(`http://localhost:5000/orders/${orderId}`, {\r\n          headers: { authorization: `Bearer ${userInfo.token}` },\r\n        }).then( res => {\r\n          setOrder(res.data);\r\n          console.log(\"success\");\r\n          console.log(res.data);\r\n          \r\n         \r\n         });\r\n        \r\n      } catch (err) {\r\n        \r\n      }\r\n    };\r\n\r\n    if (!userInfo) {\r\n      return alert(\"Go To Sign In\")\r\n    }\r\n    if (!order._id || (order._id && order._id !== orderId)) {\r\n      fetchOrder();\r\n    }\r\n  }, [order, userInfo, orderId]);\r\n  return (\r\n    <div>\r\n      <h5 className=\"my-3\">Order {orderId}</h5>\r\n\r\n      <Card className=\"mb-3\">\r\n            <CardBody>\r\n              <CardTitle>Shipping</CardTitle>\r\n              <CardText>\r\n                <strong>Name:</strong> {order.shippingAddress.fullName} <br />\r\n                <strong>Address: </strong> {order.shippingAddress.address},\r\n                {order.shippingAddress.city}, {order.shippingAddress.postalCode}\r\n                ,{order.shippingAddress.country}\r\n              </CardText>\r\n              {order.isDelivered ? (\r\n                <MessageBox variant=\"success\">\r\n                  Delivered at {order.deliveredAt}\r\n                </MessageBox>\r\n              ) : (\r\n                <MessageBox variant=\"danger\">Not Delivered</MessageBox>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n      \r\n    \r\n  </div>\r\n    \r\n  \r\n     \r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}