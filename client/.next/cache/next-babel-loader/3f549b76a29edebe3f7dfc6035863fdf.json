{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karim\\\\Desktop\\\\Project\\\\PrimeTime\\\\client\\\\pages\\\\order\\\\orderHistory.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Grid, List, ListItem, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from \"@material-ui/core\";\nimport Axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Card } from \"reactstrap\";\nimport LoadingBox from \"../../components/LoadingBox\";\nimport CommonLayout from \"../../containers/common/common-layout\";\nimport { Store } from \"../../utils/Store\";\nimport useStyles from \"./style\";\nexport default function OrderHistory() {\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const classes = useStyles();\n  const {\n    0: orders,\n    1: Setorders\n  } = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      await Axios.get(`http://localhost:5000/orders/mine`, {\n        user: userInfo._id\n      }).then(res => {\n        console.log(userInfo._id);\n        Setorders(res.data);\n        console.log(res.data);\n      });\n    };\n\n    fetchData();\n  }, [userInfo]);\n  return __jsx(CommonLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  }, \"Order History\"), __jsx(Grid, {\n    item: true,\n    md: 9,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }\n  }, __jsx(Card, {\n    className: classes.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, userInfo ? __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }\n  }) : __jsx(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  }, __jsx(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 27\n    }\n  }, \"ID\"), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 27\n    }\n  }, \"DATE\"), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 27\n    }\n  }, \"TOTAL\"), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 27\n    }\n  }, \"PAID\"), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 27\n    }\n  }, \"DELIVERED\"), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 27\n    }\n  }, \"ACTION\"))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }\n  }, orders.map(order => __jsx(TableRow, {\n    key: order._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 27\n    }\n  }, __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, order._id.substring(20, 24)), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  }, order.createdAt), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, \"$\", order.totalPrice), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, order.isPaid ? `paid at ${order.paidAt}` : 'not paid'), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, order.isDelivered ? `delivered at ${order.deliveredAt}` : 'not delivered'), __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, __jsx(NexLink, {\n    href: `/order/${order._id}`,\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 31\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }, \"Details\")))))))))))));\n}","map":{"version":3,"sources":["C:/Users/Karim/Desktop/Project/PrimeTime/client/pages/order/orderHistory.js"],"names":["Grid","List","ListItem","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","Axios","useContext","useEffect","useState","Card","LoadingBox","CommonLayout","Store","useStyles","OrderHistory","state","userInfo","classes","orders","Setorders","fetchData","get","user","_id","then","res","console","log","data","section","map","order","substring","createdAt","totalPrice","isPaid","paidAt","isDelivered","deliveredAt"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,QAArB,EAA+BC,KAA/B,EAAsCC,SAAtC,EAAiDC,SAAjD,EAA4DC,cAA5D,EAA4EC,SAA5E,EAAuFC,QAAvF,EAAiGC,UAAjG,QAAmH,mBAAnH;AACA,OAAQC,KAAR,MAAmB,OAAnB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,SAAP,MAAsB,SAAtB;AAEA,eAAe,SAASC,YAAT,GAAwB;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAYT,UAAU,CAACM,KAAD,CAA5B;AACA,QAAM;AAACI,IAAAA;AAAD,MAAaD,KAAnB;AACA,QAAME,OAAO,GAAGJ,SAAS,EAAzB;AACA,QAAM;AAAA,OAACK,MAAD;AAAA,OAASC;AAAT,MAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,SAAS,GAAG,YAAY;AAGzB,YAAMf,KAAK,CAACgB,GAAN,CACJ,mCADI,EAGL;AAAEC,QAAAA,IAAI,EAACN,QAAQ,CAACO;AAAhB,OAHK,EAGiBC,IAHjB,CAGuBC,GAAG,IAAI;AACjCC,QAAAA,OAAO,CAACC,GAAR,CAAYX,QAAQ,CAACO,GAArB;AACAJ,QAAAA,SAAS,CAACM,GAAG,CAACG,IAAL,CAAT;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AAGA,OATG,CAAN;AAYJ,KAfD;;AAgBAR,IAAAA,SAAS;AACV,GAlBQ,EAkBN,CAACJ,QAAD,CAlBM,CAAT;AAmBA,SACI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADC,EAED,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,MAAC,IAAD;AAAM,IAAA,SAAS,EAAEC,OAAO,CAACY,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,QAAQ,GAEP,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFO,GAIP,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,EAIE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAKE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,EAME,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,CADF,CADF,EAWE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,MAAM,CAACY,GAAP,CAAYC,KAAD,IACV,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAK,CAACR,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYQ,KAAK,CAACR,GAAN,CAAUS,SAAV,CAAoB,EAApB,EAAwB,EAAxB,CAAZ,CADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYD,KAAK,CAACE,SAAlB,CAFF,EAGE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAaF,KAAK,CAACG,UAAnB,CAHF,EAIE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,MAAN,GACI,WAAUJ,KAAK,CAACK,MAAO,EAD3B,GAEG,UAHN,CAJF,EASE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACM,WAAN,GACI,gBAAeN,KAAK,CAACO,WAAY,EADrC,GAEG,eAHN,CATF,EAcE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,IAAI,EAAG,UAASP,KAAK,CAACR,GAAI,EAAnC;AAAsC,IAAA,QAAQ,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,CAdF,CADD,CADH,CAXF,CADF,CALJ,CAFF,CADF,CADL,CAFC,CADJ;AA6DD","sourcesContent":["import { Grid, List, ListItem, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from \"@material-ui/core\";\r\nimport  Axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Card } from \"reactstrap\";\r\nimport LoadingBox from \"../../components/LoadingBox\";\r\nimport CommonLayout from \"../../containers/common/common-layout\";\r\nimport { Store } from \"../../utils/Store\";\r\nimport useStyles from \"./style\";\r\n\r\nexport default function OrderHistory() {\r\n  const { state } = useContext(Store);\r\n  const {userInfo} = state;\r\n  const classes = useStyles();\r\n  const [orders ,Setorders]=useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n     \r\n     \r\n         await Axios.get(\r\n          `http://localhost:5000/orders/mine`,\r\n\r\n          { user:userInfo._id}).then( res => {\r\n            console.log(userInfo._id);\r\n            Setorders(res.data);\r\n            console.log(res.data);\r\n            \r\n             \r\n           });\r\n       \r\n      \r\n    };\r\n    fetchData();\r\n  }, [userInfo]);\r\n  return (\r\n      <CommonLayout>\r\n     <strong>Order History</strong>\r\n     <Grid item md={9} xs={12}>\r\n          <Card className={classes.section}>\r\n            <List>\r\n               \r\n              <ListItem>\r\n                {userInfo ? (\r\n               \r\n                  <Typography></Typography>\r\n                ) : (\r\n                  <TableContainer>\r\n                    <Table>\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>ID</TableCell>\r\n                          <TableCell>DATE</TableCell>\r\n                          <TableCell>TOTAL</TableCell>\r\n                          <TableCell>PAID</TableCell>\r\n                          <TableCell>DELIVERED</TableCell>\r\n                          <TableCell>ACTION</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {orders.map((order) => (\r\n                          <TableRow key={order._id}>\r\n                            <TableCell>{order._id.substring(20, 24)}</TableCell>\r\n                            <TableCell>{order.createdAt}</TableCell>\r\n                            <TableCell>${order.totalPrice}</TableCell>\r\n                            <TableCell>\r\n                              {order.isPaid\r\n                                ? `paid at ${order.paidAt}`\r\n                                : 'not paid'}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {order.isDelivered\r\n                                ? `delivered at ${order.deliveredAt}`\r\n                                : 'not delivered'}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              <NexLink href={`/order/${order._id}`} passHref>\r\n                                <Button variant=\"contained\">Details</Button>\r\n                              </NexLink>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                )}\r\n              </ListItem>\r\n            </List>\r\n          </Card>\r\n        </Grid>\r\n     </CommonLayout>\r\n\r\n  )\r\n\r\n  \r\n\r\n}"]},"metadata":{},"sourceType":"module"}