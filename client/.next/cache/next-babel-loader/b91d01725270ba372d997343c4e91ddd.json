{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Karim\\\\Desktop\\\\Project\\\\PrimeTime\\\\client\\\\components\\\\PaymentForm.js\";\nvar __jsx = React.createElement;\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport Axios from \"axios\";\nimport React, { useState } from 'react';\nvar CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"#c4f0ff\",\n      color: \"#000\",\n      fontWeight: 500,\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkit-autofill\": {\n        color: \"#fce883\"\n      },\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\"\n    }\n  }\n};\nexport default function PaymentForm(_ref) {\n  var price = _ref.price,\n      id1 = _ref.id1;\n\n  var _useState = useState(false),\n      success = _useState[0],\n      setSuccess = _useState[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$stripe$createP, error, paymentMethod, id, response;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return stripe.createPaymentMethod({\n                type: \"card\",\n                card: elements.getElement(CardElement)\n              });\n\n            case 3:\n              _yield$stripe$createP = _context.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n\n              if (error) {\n                _context.next = 23;\n                break;\n              }\n\n              _context.prev = 7;\n              id = paymentMethod.id;\n              console.log(id);\n              _context.next = 12;\n              return Axios.post(\"http://localhost:5000/orders/payment\", {\n                amount: price * 100,\n                id: id\n              });\n\n            case 12:\n              response = _context.sent;\n              _context.next = 15;\n              return Axios.put(\"http://localhost:5000/orders/\".concat(id1, \"/pay\"), {});\n\n            case 15:\n              if (response.data.success) {\n                console.log(\"Successful payment\");\n                setSuccess(true);\n              }\n\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](7);\n              console.log(\"Error\", _context.t0);\n\n            case 21:\n              _context.next = 24;\n              break;\n\n            case 23:\n              console.log(error.message);\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[7, 18]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, !success ? __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(\"fieldset\", {\n    className: \"FormGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"FormRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, __jsx(CardElement, {\n    options: CARD_OPTIONS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }))), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Pay\")) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 8\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }\n  }, \"You just bought a sweet product this is the best decision of you're life\")));\n}","map":{"version":3,"sources":["C:/Users/Karim/Desktop/Project/PrimeTime/client/components/PaymentForm.js"],"names":["CardElement","useElements","useStripe","Axios","React","useState","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","PaymentForm","price","id1","success","setSuccess","stripe","elements","handleSubmit","e","preventDefault","createPaymentMethod","type","card","getElement","error","paymentMethod","id","console","log","post","amount","response","put","data","message"],"mappings":";;;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,SAAnC,QAAoD,yBAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,IAAMC,YAAY,GAAG;AACpBC,EAAAA,SAAS,EAAE,OADS;AAEpBC,EAAAA,KAAK,EAAE;AACNC,IAAAA,IAAI,EAAE;AACLC,MAAAA,SAAS,EAAE,SADN;AAELC,MAAAA,KAAK,EAAE,MAFF;AAGLC,MAAAA,UAAU,EAAE,GAHP;AAILC,MAAAA,UAAU,EAAE,yCAJP;AAKLC,MAAAA,QAAQ,EAAE,MALL;AAMLC,MAAAA,aAAa,EAAE,aANV;AAOL,2BAAqB;AAAEJ,QAAAA,KAAK,EAAE;AAAT,OAPhB;AAQL,uBAAiB;AAAEA,QAAAA,KAAK,EAAE;AAAT;AARZ,KADA;AAWNK,IAAAA,OAAO,EAAE;AACRN,MAAAA,SAAS,EAAE,SADH;AAERC,MAAAA,KAAK,EAAE;AAFC;AAXH;AAFa,CAArB;AAoBA,eAAe,SAASM,WAAT,OAAkC;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAAA,MAANC,GAAM,QAANA,GAAM;;AAC7C,kBAA+Bd,QAAQ,CAAC,KAAD,CAAvC;AAAA,MAAOe,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,MAAM,GAAGpB,SAAS,EAAxB;AACA,MAAMqB,QAAQ,GAAGtB,WAAW,EAA5B;;AAGA,MAAMuB,YAAY;AAAA,yEAAG,iBAAOC,CAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjBA,cAAAA,CAAC,CAACC,cAAF;AADiB;AAAA,qBAEoBJ,MAAM,CAACK,mBAAP,CAA2B;AAC5DC,gBAAAA,IAAI,EAAE,MADsD;AAE5DC,gBAAAA,IAAI,EAAEN,QAAQ,CAACO,UAAT,CAAoB9B,WAApB;AAFsD,eAA3B,CAFpB;;AAAA;AAAA;AAEV+B,cAAAA,KAFU,yBAEVA,KAFU;AAEHC,cAAAA,aAFG,yBAEHA,aAFG;;AAAA,kBAQjBD,KARiB;AAAA;AAAA;AAAA;;AAAA;AAUNE,cAAAA,EAVM,GAUAD,aAVA,CAUNC,EAVM;AAWbC,cAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AAXa;AAAA,qBAYU9B,KAAK,CAACiC,IAAN,CAAW,sCAAX,EAAmD;AACtEC,gBAAAA,MAAM,EAAEnB,KAAK,GAAC,GADwD;AAEtEe,gBAAAA,EAAE,EAAFA;AAFsE,eAAnD,CAZV;;AAAA;AAYPK,cAAAA,QAZO;AAAA;AAAA,qBAiBPnC,KAAK,CAACoC,GAAN,wCAA0CpB,GAA1C,WAAqD,EAArD,CAjBO;;AAAA;AAuBb,kBAAGmB,QAAQ,CAACE,IAAT,CAAcpB,OAAjB,EAA0B;AACtBc,gBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAd,gBAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AA1BY;AAAA;;AAAA;AAAA;AAAA;AAgCba,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAhCa;AAAA;AAAA;;AAAA;AAmCjBD,cAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACU,OAAlB;;AAnCiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZjB,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAuCA,SACI,4BACC,CAACJ,OAAD,GACD;AAAM,IAAA,QAAQ,EAAEI,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAU,IAAA,SAAS,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAa,IAAA,OAAO,EAAElB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANJ,CADC,GAUF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFADJ,CAXC,CADJ;AAmBH","sourcesContent":["import { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\"\r\nimport Axios from \"axios\"\r\nimport React, { useState } from 'react'\r\n\r\n\r\nconst CARD_OPTIONS = {\r\n\ticonStyle: \"solid\",\r\n\tstyle: {\r\n\t\tbase: {\r\n\t\t\ticonColor: \"#c4f0ff\",\r\n\t\t\tcolor: \"#000\",\r\n\t\t\tfontWeight: 500,\r\n\t\t\tfontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\r\n\t\t\tfontSize: \"16px\",\r\n\t\t\tfontSmoothing: \"antialiased\",\r\n\t\t\t\":-webkit-autofill\": { color: \"#fce883\" },\r\n\t\t\t\"::placeholder\": { color: \"#87bbfd\" }\r\n\t\t},\r\n\t\tinvalid: {\r\n\t\t\ticonColor: \"#ffc7ee\",\r\n\t\t\tcolor: \"#ffc7ee\"\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default function PaymentForm({price,id1}) {\r\n    const [success, setSuccess ] = useState(false)\r\n    const stripe = useStripe()\r\n    const elements = useElements()\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n            type: \"card\",\r\n            card: elements.getElement(CardElement)\r\n        })\r\n\r\n\r\n    if(!error) {\r\n        try {\r\n            const {id} = paymentMethod\r\n            console.log(id);\r\n            const response = await Axios.post(\"http://localhost:5000/orders/payment\", {\r\n                amount: price*100,\r\n                id\r\n            })\r\n\r\n            await Axios.put(`http://localhost:5000/orders/${id1}/pay`, {\r\n                \r\n                \r\n            })\r\n\r\n\r\n            if(response.data.success) {\r\n                console.log(\"Successful payment\")\r\n                setSuccess(true)\r\n            }\r\n\r\n             \r\n            \r\n\r\n        } catch (error) {\r\n            console.log(\"Error\", error)\r\n        }\r\n    } else {\r\n        console.log(error.message)\r\n    }\r\n}\r\n\r\n    return (\r\n        <>\r\n        {!success ? \r\n        <form onSubmit={handleSubmit}>\r\n            <fieldset className=\"FormGroup\">\r\n                <div className=\"FormRow\">\r\n                    <CardElement options={CARD_OPTIONS}/>\r\n                </div>\r\n            </fieldset>\r\n            <button>Pay</button>\r\n        </form>\r\n        :\r\n       <div>\r\n           <h2>You just bought a sweet product this is the best decision of you're life</h2>\r\n       </div> \r\n        }\r\n            \r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}