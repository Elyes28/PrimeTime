{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.65ee4b680a92066d7079.hot-update.js","sources":["webpack:///./pages/features/gallery/popup.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport {Container,Row,Col,Form,FormGroup,Label,Input} from 'reactstrap'\nimport axios from 'axios';\n\n\n\n      \n\nconst Popup = () => {\n    const [modal, setModal] = useState();\n    const [activeTab, setActiveTab] = useState('1');\n    const [postData, setPostData] = useState({ email: '', password: ''});\n    const [formErrors,setFormErrors]= useState({});\n    \n    const toggle = () => {\n        setModal(!modal)\n    }\n    const url = 'http://localhost:5000/user/forgetpass';\n\n     const log= postData.email;\n\n     const forgetpass = () => axios.post(url,{email:postData.email}).then(res => {\n        console.log(log);\n    console.log(res);\n    console.log(res.data);\n  }).catch(\n    function (error) {\n        console.log(postData.email);\n      console.log('Show error notification!')\n      return Promise.reject(error)\n    }\n  )\n\n    \n    const [user, setUser] = useState({ email: '', password: '', token:''});\n    const [newUser, setNewUser] = useState({ email: '', password: '',ConfirmPass:'', firstname:'', lastName:''});\n    const [signinerr,SetSigninerr]=useState({status:'',message:''});\n    const [badPass,setError]=useState({message:''});\n    const [sign_forget, setSignOrForget] = useState(\"\");\n    const [buttonValue,setButtonValue]=useState(\"Login\");\n    const signup =(e)=> {\n        e.preventDefault();\n        console.log(\"implement sign up here\")\n     \n   \nif(newUser.password == newUser.ConfirmPass)\n\n        axios.post(\"http://localhost:5000/user/signup\",{email:newUser.email,\n        password:newUser.password,firstName:newUser.firstName,lastName:newUser.lastName}).then( res => {\n            setError({...badPass,message:\"aaa\"})\n\n        })\n        .catch(function (error) {\n            console.log(error.response.data);\n           \n        })\n        else\n        setError({...badPass,message:\"Password confirmation doesnt match !\"})\n\n \n    }\n\n\n    const signin =()=> {\n        console.log(\"implement sign in here\")\n        \n\n\n        axios.post(\"http://localhost:5000/user/signin\",{email:log,password:postData.password}).then( res => {\n            setUser({...user,email:res.data.result.email,password:res.data.result.password,token:res.data.token});\n            const current_user={email:res.data.result.email,\n                                token:res.data.token,\n                                firstName:res.data.result.firstname,\n                                _id:res.data.result._id,\n                                lastName:res.data.result.lastname}\n                        console.log(res.data)\n                        set        \n                               // current_user.bro=res.data.result.token;\n                             \n                                localStorage.setItem('user',JSON.stringify(current_user))\n            SetSigninerr({...signinerr,status:error.response.data.message,message:error.response.data.message})\n        })\n        .catch(function (error) {\n           // console.log(error.response.data);\n            //SetSigninerr({...signinerr,status:error.response.status,message:error.response.data.message})\n           // console.log(signinerr)\n        })\n    }\n \n\n    \n\n    //\n\n    return (\n        <Fragment>\n            {/* // <!-- Login-popup section start --> */}\n            <section className=\"login-popup p-0\" style={{overflow :'inherit !important',}} >\n                <Container>\n                    <Row>\n                        <Col md=\"6\" className=\"offset-md-3\">\n                            <div className=\"text-center\">\n                                \n                                <Button className=\"popup-with-form btn btn-default primary-btn\" onClick={() => { toggle(); }} >Login</Button>\n                                \n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n            {/* // <!-- Login-popup section end --> */}\n\n            {/* // <!-- Login-modal section start --> */}\n            <Modal isOpen={modal} toggle={toggle}>\n                <a onClick={toggle} className=\"modal-no-header mt-3\" style={{ width:\"50px\", left:\"95%\",fontSize:\"1rem\"}}>X</a>\n                \n                <ModalBody>\n                    <div className=\"modal-body login-modal\">\n                        <Nav tabs className=\"nav nav-pills mb-5\">\n                            <NavItem>\n                                <NavLink className={activeTab == '1' ? 'active' : ''} onClick={() => setActiveTab('1')}>\n                                    Login\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className={activeTab == '2' ? 'active' : ''} onClick={() => setActiveTab('2')}>\n                                    Sign Up\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                        <TabContent className=\"tab-content\" activeTab={activeTab}>\n                            <TabPane tabId=\"1\" aria-labelledby=\"pills-home-tab\" className=\"\"\n                                role=\"tabpanel\">\n                                {/* <!-- login-form --> */}\n                                \n                                    <div className=\"form-row\">\n                                        <FormGroup className=\"col-md-12\">\n                                            <Label for=\"inputEmail\">Email</Label>\n                                            <Input className=\"form-control\" id=\"inputEmail\" placeholder=\"Email\" type=\"email\" value={postData.email} onChange={(e)=>setPostData({...postData,email: e.target.value})} />\n                                            \n                                        </FormGroup>\n                                        <FormGroup className=\"col-md-12\">\n                                            <Label for=\"inputPassword05\">Password</Label>\n                                            <Input className=\"form-control\" id=\"inputPassword05\" placeholder=\"Password\"\n                                                type=\"password\" value={postData.password} onChange={(e)=>setPostData({...postData,password: e.target.value})} />\n                                        </FormGroup>\n                                        <Label style={{color : 'red'}} for=\"inputEmail\"  >{signinerr.message}</Label>\n\n                                    </div>\n                                    <button className=\"btn primary-btn btn-default text-uppercase\"  onClick={()=>signin()} >Login</button>\n                                    <button className=\"btn primary-btn btn-default text-uppercase\" type='submit' onClick={()=>forgetpass()} >Forget password</button>\n                                    \n                               \n                                {/* <!-- end login form --> */}\n                            </TabPane>\n                            <TabPane tabId=\"2\" aria-labelledby=\"pills-profile-tab\" className=\"\" \n                                role=\"tabpanel\">\n                                {/* <!-- sign up form --> */}\n                                <Form>\n                                    <div className=\"form-row\">\n                                        <FormGroup className=\"col-md-12\">\n                                            <Label for=\"inputEmail05\">Email</Label>\n                                            <Input className=\"form-control\" id=\"inputEmail05\" placeholder=\"Email\" type=\"email\" value={newUser.email} onChange={(e)=>setNewUser({...newUser,email: e.target.value})}/>\n                                        </FormGroup>\n                                        <FormGroup className=\"col-md-6\">\n                                            <Label for=\"inputPassword04\">Password</Label>\n                                            <Input className=\"form-control\" id=\"inputPassword04\" placeholder=\"Password\" value={newUser.password} onChange={(e)=>setNewUser({...newUser,password: e.target.value})}\n                                                type=\"password\" />\n                                        </FormGroup>\n                                        <FormGroup className=\"col-md-6\">\n                                            <Label for=\"inputPassword4\">Confirm Password</Label>\n                                            \n                                            <Input className=\"form-control\" id=\"inputPasswordConfirmation\" placeholder=\"Password\" value={newUser.ConfirmPass} onChange={(e)=>setNewUser({...newUser,ConfirmPass: e.target.value})}\n                                                type=\"password\" />\n                                                <Label style={{color : 'red'}} for=\"errorMessage\" >{badPass.message}</Label>\n                                        </FormGroup>\n                                    </div>\n                                    <FormGroup>\n                                        <Label for=\"inputAddress\">Address</Label>\n                                        <Input className=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\"\n                                            type=\"text\" />\n                                            <Label for=\"inputAddress\">Name</Label>\n                                        <Input className=\"form-control\" id=\"inputNAme\" placeholder=\"John\" value={newUser.firstName} onChange={(e)=>setNewUser({...newUser,firstName: e.target.value})}\n                                            type=\"text\" />\n                                            <Label for=\"inputAddress\">Last name</Label>\n                                        <Input className=\"form-control\" id=\"inputLastName\" placeholder=\"Doe\" value={newUser.lastName} onChange={(e)=>setNewUser({...newUser,lastName: e.target.value})}\n                                            type=\"text\" />\n                                    </FormGroup>\n\n                                    <button className=\"btn btn-default primary-btn text-uppercase\" onClick={(e)=>signup(e)} >Sign Up</button>\n                                </Form>\n                                {/* <!-- end sign up form --> */}\n                            </TabPane>\n                        </TabContent>\n                    </div>\n                </ModalBody>\n            </Modal>\n        </Fragment>\n    )\n}\n\n\nexport default Popup;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AATA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AAAA;AADA;AAEA;AAAA;AAAA;AAEA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAEA;;;;A","sourceRoot":""}