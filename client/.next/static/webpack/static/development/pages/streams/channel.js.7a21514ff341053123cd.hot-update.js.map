{"version":3,"file":"static/webpack/static\\development\\pages\\streams\\channel.js.7a21514ff341053123cd.hot-update.js","sources":["webpack:///./pages/streams/channel.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport Layout from '../../containers/common/common-layout'\r\nimport axios from 'axios';\r\nimport Slider from 'react-slick';\r\nimport { PortfolioDetail1Data } from './database';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst images = [\r\n    require('../../public/assets/images/portfolio/2.jpg'),\r\n    require('../../public/assets/images/portfolio/3.jpg'),\r\n    require('../../public/assets/images/portfolio/5.jpg'),\r\n    require('../../public/assets/images/portfolio/4.jpg'),\r\n    require('../../public/assets/images/portfolio/5.jpg')\r\n]\r\n\r\n\r\nvar settings1 = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    autoplay: false,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n};\r\nvar settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    arrows: false,\r\n    autoplay: false,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 3,\r\n    responsive: [\r\n        {\r\n            breakpoint: 1200,\r\n            settings: { slidesToShow: 4 }\r\n        },\r\n        {\r\n            breakpoint: 992,\r\n            settings: { slidesToShow: 2 }\r\n        },\r\n        {\r\n            breakpoint: 575,\r\n            settings: { slidesToShow: 1 }\r\n        }\r\n    ]\r\n};\r\n\r\nconst PortfolioDetail2 = () => {\r\n   const [stream,setStream]=useState();\r\n   const [user,setUser]=useState();\r\n   useEffect(() => {\r\n    \r\n    setUser(JSON.parse(localStorage.getItem(\"user\")))\r\n\r\n  },[]);\r\n    const getStream = async(para) =>\r\n   \r\n    axios.get(\"http://localhost:5000/user/getCurrentStream/\"+para).then(res=>{\r\n        setStream(res.data)\r\n        \r\n        //  axios.get(\"http://localhost:5000/stream/getStreamById/\"+res.data.meetingId)\r\n        //      .then(ress => {\r\n        //          setStream(ress.data);\r\n                \r\n             \r\n        //       }) .catch(function (error) {\r\n        //          console.log(\"error.response.data\");              \r\n        //      })        \r\n        \r\n        })\r\n            useEffect(() => {\r\n                \r\n                const queryParams = new URLSearchParams(window.location.search);\r\n                getStream(queryParams.get(\"id\"));\r\n                \r\n                \r\n              },[]);\r\n             let iframeurl=\"\"\r\n             let name=\"\"\r\n            if (user)\r\n              name = user[\"firstName\"]+\" \"+user[\"lastName\"]\r\n             \r\n             //   console.log(\"name is \"+name)\r\n              if (stream && name)\r\n              iframeurl=\"http://localhost:3001/react-rtc-demo?streamerName=\"+name+\"&meetId=\"+stream[\"meetingId\"]\r\n\r\n              \r\n    const initilindex = { index: 0, isOpen: false }\r\n\r\nconst [photoIndex, setPhotoIndex] = useState(initilindex)\r\n    return(\r\n        <Layout pathList={['portfolio details', 'full width']} pathTitle=\"full width\">\r\n    <Fragment>\r\n            <section className=\"portfolio-section port-col zoom-gallery detail-page fullwidth-portfolio\">\r\n\r\n            <div className=\"container-fluid blog-sec detail2 p-0\">\r\n        <Slider className=\"owl-carousel owl-theme portfolio-header\" {...settings1}>\r\n            {stream}\r\n            <div className=\"item \">\r\n            <iframe id='showskill' height=\"900\" width=\"100%\" style={{\"border\":\"white\"}} title=\"Iframe Example\"  src={iframeurl}></iframe>\r\n                  </div>\r\n            <div className=\"item\">\r\n                <img alt=\"\" className=\"img-fluid\" src=\"../assets/images/inner-page/blogs/2.jpg\" />\r\n            </div>\r\n        </Slider>\r\n    </div>\r\n\r\n                <div className=\"container-fluid p-t-30 px-0\">\r\n                    <div className=\"row\">\r\n                        <Slider className=\"portfolio-slider col-sm-12\" {...settings}>\r\n                            {PortfolioDetail1Data.map((data, i) => {\r\n                                return (\r\n                                    <div className=\"item\" key={i}>\r\n                                        <div className=\"isotopeSelector\">\r\n                                            <div className=\"overlay\">\r\n                                                <div className=\"border-portfolio\">\r\n                                                    <a className=\"zoom_gallery\" data-source={images[photoIndex.index]}\r\n                                                        href={null} title=\"Into The Blue\"  >\r\n                                                        <img alt=\"\" className=\"img-fluid blur-up lazyload\" onClick={() =>\r\n                                                            setPhotoIndex({ ...photoIndex, index: i, isOpen: true })\r\n                                                        }\r\n                                                            src={data.img} />\r\n\r\n                                                    </a>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n                {photoIndex.isOpen && (\r\n                    <Lightbox\r\n                        mainSrc={images[photoIndex.index]}\r\n                        nextSrc={images[(photoIndex.index + 1) % images.length]}\r\n                        prevSrc={images[(photoIndex.index + images.length - 1) % images.length]}\r\n                        imageTitle={photoIndex.index + 1 + \"/\" + images.length}\r\n                        onCloseRequest={() => setPhotoIndex({ ...photoIndex, isOpen: false })}\r\n                        onMovePrevRequest={onMovePrev}\r\n                        onMoveNextRequest={onMoveNext}\r\n                    />\r\n                )}\r\n\r\n                <div className=\"container m-t-50\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"portfolio-detail\">\r\n                                <h3 className=\"detail-head\">project detail</h3>\r\n                                <div className=\"detail-container d-flex p-t-0\">\r\n                                    <div className=\"portfolio-left\">\r\n                                        <h5 className=\"text-left\">client :</h5>\r\n                                    </div>\r\n                                    <div className=\"portfolio-right\">\r\n                                        <h5>john doe</h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"detail-container d-flex\">\r\n                                    <div className=\"portfolio-left\">\r\n                                        <h5 className=\"text-left\">date :</h5>\r\n                                    </div>\r\n                                    <div className=\"portfolio-right\">\r\n                                        <h5>22 Nov 2019</h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"detail-container d-flex\">\r\n                                    <div className=\"portfolio-left\">\r\n                                        <h5 className=\"text-left\">link :</h5>\r\n                                    </div>\r\n                                    <div className=\"portfolio-right\">\r\n                                        <h5>www.abcd.com</h5>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"portfolio-detail\">\r\n                                <h3 className=\"detail-head\">about project</h3>\r\n                                <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum\r\n                                has been\r\n                                the industry's standard dummy text ever since the 1500s, when an unknown printer took a\r\n                                galley\r\n                    of type and scrambled it to make a type specimen book.</p>\r\n                                <div className=\"text-right m-t-10\"><a className=\"btn btn-default primary-btn radius-0\" href=\"#\">visit\r\n                    project</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <!-- pagination Start --> */}\r\n                <div className=\"pagination_sec\">\r\n                    <div className=\"content_detail__pagination cdp\">\r\n                        <ul>\r\n                            <li><a className=\"prev\" href=\"#\"><i aria-hidden=\"true\" className=\"fa fa-angle-double-left\"></i></a></li>\r\n                            <li><a className=\"active cdp_i\" href=\"#\">1</a></li>\r\n                            <li><a className=\"cdp_i\" href=\"#\">2</a></li>\r\n                            <li><a className=\"cdp_i\" href=\"#\">3</a></li>\r\n                            <li><a className=\"next\" href=\"#\"><i aria-hidden=\"true\" className=\"fa fa-angle-double-right\"></i></a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                {/* <!-- pagination End --> */}\r\n            </section>\r\n        </Fragment>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default PortfolioDetail2;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AAAA;AAFA;AAjBA;AACA;AAuBA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAcsourceRoot":""}