{"version":3,"file":"static/webpack/static\\development\\pages\\streams\\channel.js.71c836c8b2ed05a7cb29.hot-update.js","sources":["webpack:///./pages/features/gallery/popup.js","webpack:///./pages/streams/channel.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\r\nimport {Container,Row,Col,Form,FormGroup,Label,Input} from 'reactstrap'\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n      \r\n\r\nconst Popup = () => {\r\n    const [modal, setModal] = useState();\r\n    const [activeTab, setActiveTab] = useState('1');\r\n    const [postData, setPostData] = useState({ email: '', password: ''});\r\n    const [formErrors,setFormErrors]= useState({});\r\n    \r\n    const toggle = () => {\r\n        setModal(!modal)\r\n    }\r\n    const url = 'http://localhost:5000/user/forgetpass';\r\n\r\n     const log= postData.email;\r\n\r\n     const forgetpass = () => axios.post(url,{email:postData.email}).then(res => {\r\n        console.log(log);\r\n    console.log(res);\r\n    console.log(res.data);\r\n  }).catch(\r\n    function (error) {\r\n        console.log(postData.email);\r\n      console.log('Show error notification!')\r\n      return Promise.reject(error)\r\n    }\r\n  )\r\n\r\n    \r\n    const [user, setUser] = useState({ email: '', password: '', token:''});\r\n    const [newUser, setNewUser] = useState({ email: '', password: '',ConfirmPass:'', firstname:'', lastName:''});\r\n    const [signinerr,SetSigninerr]=useState({status:'',message:''});\r\n    const [badPass,setError]=useState({message:''});\r\n    const [sign_forget, setSignOrForget] = useState(\"\");\r\n    const [buttonValue,setButtonValue]=useState(\"\");\r\n    const signup =(e)=> {\r\n        e.preventDefault();\r\n        console.log(\"implement sign up here\")\r\n     \r\n   \r\nif(newUser.password == newUser.ConfirmPass)\r\n\r\n        axios.post(\"http://localhost:5000/user/signup\",{email:newUser.email,\r\n        password:newUser.password,firstName:newUser.firstName,lastName:newUser.lastName}).then( res => {\r\n            setError({...badPass,message:\"aaa\"})\r\n\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error.response.data);\r\n           \r\n        })\r\n        else\r\n        setError({...badPass,message:\"Password confirmation doesnt match !\"})\r\n\r\n \r\n    }\r\n\r\n\r\n    const signin =()=> {\r\n        \r\n        axios.post(\"http://localhost:5000/user/signin\",{email:log,password:postData.password}).then( res => {\r\n            setUser({...user,email:res.data.result.email,password:res.data.result.password,token:res.data.token});\r\n            const current_user={email:res.data.result.email,\r\n                                token:res.data.token,\r\n                                firstName:res.data.result.firstname,\r\n                                _id:res.data.result._id,\r\n                                lastName:res.data.result.lastname,\r\n                                expiration:res.data.result.active_until,\r\n                                role:res.data.result.role,\r\n                                phone:res.data.result.phone,\r\n                                instagram:res.data.result.instagram,\r\n                                youtube:res.data.result.youtube,\r\n                                facebook:res.data.result.facebook,\r\n                                spotify:res.data.result.spotify,\r\n                                channelDescription:res.data.result.channel_description\r\n\r\n                            }\r\n                        setButtonValue(\"log out\");     \r\n                        toggle();   \r\n                               // current_user.bro=res.data.result.token;\r\n                             \r\n                                localStorage.setItem('user',JSON.stringify(current_user))\r\n            SetSigninerr({...signinerr,status:error.response.data.message,message:error.response.data.message})\r\n        })\r\n        .catch(function (error) {\r\n            if (error.response)\r\n            SetSigninerr({...signinerr,status:error.response.status,message:error.response.data.message})\r\n           \r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (JSON.parse(localStorage.getItem(\"user\")))\r\n         setButtonValue(true)\r\n         else\r\n         setButtonValue(false) \r\n      },[]);\r\n\r\n      const logout=() =>{\r\n          localStorage.removeItem(\"user\");\r\n          setButtonValue(!buttonValue);\r\n      }\r\n \r\n\r\n    \r\n\r\n    //\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* // <!-- Login-popup section start --> */}\r\n            <section className=\"login-popup p-0\" style={{overflow :'inherit !important',}} >\r\n                <Container>\r\n                    <Row>\r\n                        <Col md=\"6\" className=\"offset-md-3\">\r\n                            <div className=\"text-center\">\r\n                                \r\n                                <Button className=\"popup-with-form btn btn-default primary-btn\" hidden={buttonValue} onClick={() => { toggle(); }} >Login</Button>\r\n                                <Button className=\"popup-with-form btn btn-default primary-btn\"  hidden={!buttonValue} onClick={() => { logout(); }} >Logout</Button>\r\n\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n            {/* // <!-- Login-popup section end --> */}\r\n\r\n            {/* // <!-- Login-modal section start --> */}\r\n            <Modal isOpen={modal} toggle={toggle}>\r\n                <a onClick={toggle} className=\"modal-no-header mt-3\" style={{ width:\"50px\", left:\"95%\",fontSize:\"1rem\"}}>X</a>\r\n                \r\n                <ModalBody>\r\n                    <div className=\"modal-body login-modal\">\r\n                        <Nav tabs className=\"nav nav-pills mb-5\">\r\n                            <NavItem>\r\n                                <NavLink className={activeTab == '1' ? 'active' : ''} onClick={() => setActiveTab('1')}>\r\n                                    Login\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className={activeTab == '2' ? 'active' : ''} onClick={() => setActiveTab('2')}>\r\n                                    Sign Up\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <TabContent className=\"tab-content\" activeTab={activeTab}>\r\n                            <TabPane tabId=\"1\" aria-labelledby=\"pills-home-tab\" className=\"\"\r\n                                role=\"tabpanel\">\r\n                                {/* <!-- login-form --> */}\r\n                                \r\n                                    <div className=\"form-row\">\r\n                                        <FormGroup className=\"col-md-12\">\r\n                                            <Label for=\"inputEmail\">Email</Label>\r\n                                            <Input className=\"form-control\" id=\"inputEmail\" placeholder=\"Email\" type=\"email\" value={postData.email} onChange={(e)=>setPostData({...postData,email: e.target.value})} />\r\n                                            \r\n                                        </FormGroup>\r\n                                        <FormGroup className=\"col-md-12\">\r\n                                            <Label for=\"inputPassword05\">Password</Label>\r\n                                            <Input className=\"form-control\" id=\"inputPassword05\" placeholder=\"Password\"\r\n                                                type=\"password\" value={postData.password} onChange={(e)=>setPostData({...postData,password: e.target.value})} />\r\n                                        </FormGroup>\r\n                                        <Label style={{color : 'red'}} for=\"inputEmail\"  >{signinerr.message}</Label>\r\n\r\n                                    </div>\r\n                                    <button className=\"btn primary-btn btn-default text-uppercase\"  onClick={()=>signin()} >Login</button>\r\n                                    <button className=\"btn primary-btn btn-default text-uppercase\" type='submit' onClick={()=>forgetpass()} >Forget password</button>\r\n                                    \r\n                               \r\n                                {/* <!-- end login form --> */}\r\n                            </TabPane>\r\n                            <TabPane tabId=\"2\" aria-labelledby=\"pills-profile-tab\" className=\"\" \r\n                                role=\"tabpanel\">\r\n                                {/* <!-- sign up form --> */}\r\n                                <Form>\r\n                                    <div className=\"form-row\">\r\n                                        <FormGroup className=\"col-md-12\">\r\n                                            <Label for=\"inputEmail05\">Email</Label>\r\n                                            <Input className=\"form-control\" id=\"inputEmail05\" placeholder=\"Email\" type=\"email\" value={newUser.email} onChange={(e)=>setNewUser({...newUser,email: e.target.value})}/>\r\n                                        </FormGroup>\r\n                                        <FormGroup className=\"col-md-6\">\r\n                                            <Label for=\"inputPassword04\">Password</Label>\r\n                                            <Input className=\"form-control\" id=\"inputPassword04\" placeholder=\"Password\" value={newUser.password} onChange={(e)=>setNewUser({...newUser,password: e.target.value})}\r\n                                                type=\"password\" />\r\n                                        </FormGroup>\r\n                                        <FormGroup className=\"col-md-6\">\r\n                                            <Label for=\"inputPassword4\">Confirm Password</Label>\r\n                                            \r\n                                            <Input className=\"form-control\" id=\"inputPasswordConfirmation\" placeholder=\"Password\" value={newUser.ConfirmPass} onChange={(e)=>setNewUser({...newUser,ConfirmPass: e.target.value})}\r\n                                                type=\"password\" />\r\n                                                <Label style={{color : 'red'}} for=\"errorMessage\" >{badPass.message}</Label>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <FormGroup>\r\n                                        <Label for=\"inputAddress\">Address</Label>\r\n                                        <Input className=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\"\r\n                                            type=\"text\" />\r\n                                            <Label for=\"inputAddress\">Name</Label>\r\n                                        <Input className=\"form-control\" id=\"inputNAme\" placeholder=\"John\" value={newUser.firstName} onChange={(e)=>setNewUser({...newUser,firstName: e.target.value})}\r\n                                            type=\"text\" />\r\n                                            <Label for=\"inputAddress\">Last name</Label>\r\n                                        <Input className=\"form-control\" id=\"inputLastName\" placeholder=\"Doe\" value={newUser.lastName} onChange={(e)=>setNewUser({...newUser,lastName: e.target.value})}\r\n                                            type=\"text\" />\r\n                                    </FormGroup>\r\n\r\n                                    <button className=\"btn btn-default primary-btn text-uppercase\" onClick={(e)=>signup(e)} >Sign Up</button>\r\n                                </Form>\r\n                                {/* <!-- end sign up form --> */}\r\n                            </TabPane>\r\n                        </TabContent>\r\n                    </div>\r\n                </ModalBody>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default Popup;","import React, { Fragment, useState, useEffect } from 'react';\r\nimport Layout from '../../containers/common/common-layout'\r\nimport axios from 'axios';\r\nimport Slider from 'react-slick';\r\nimport { PortfolioDetail1Data } from './database';\r\n\r\n\r\nconst images = [\r\n    require('../../public/assets/images/portfolio/2.jpg'),\r\n    require('../../public/assets/images/portfolio/3.jpg'),\r\n    require('../../public/assets/images/portfolio/5.jpg'),\r\n    require('../../public/assets/images/portfolio/4.jpg'),\r\n    require('../../public/assets/images/portfolio/5.jpg')\r\n]\r\n\r\n\r\nvar settings1 = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    autoplay: false,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n};\r\nvar settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    arrows: false,\r\n    autoplay: false,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 3,\r\n    responsive: [\r\n        {\r\n            breakpoint: 1200,\r\n            settings: { slidesToShow: 4 }\r\n        },\r\n        {\r\n            breakpoint: 992,\r\n            settings: { slidesToShow: 2 }\r\n        },\r\n        {\r\n            breakpoint: 575,\r\n            settings: { slidesToShow: 1 }\r\n        }\r\n    ]\r\n};\r\n\r\nconst PortfolioDetail2 = () => {\r\n   const [stream,setStream]=useState();\r\n   const [user,setUser]=useState();\r\n   useEffect(() => {\r\n    \r\n    setUser(JSON.parse(localStorage.getItem(\"user\")))\r\n\r\n  },[]);\r\n\r\n  \r\n  const [streamer,setStreamer]=useState();\r\n    const getStream = async(para) =>\r\n   \r\n    axios.get(\"http://localhost:5000/user/getCurrentStream/\"+para).then(res=>{\r\n        setStream(res.data.currentstream)\r\n        console.log(\"hello\")\r\n        setStreamer(res.data.streamer)\r\n        console.log(res.data.currentstream)\r\n        //  axios.get(\"http://localhost:5000/stream/getStreamById/\"+res.data.meetingId)\r\n        //      .then(ress => {\r\n        //          setStream(ress.data);\r\n                \r\n             \r\n        //       }) .catch(function (error) {\r\n        //          console.log(\"error.response.data\");              \r\n        //      })        \r\n        \r\n        })\r\n        \r\n          const [recordedStreams, setRecordedStreams] = useState([]);\r\n          console.log(recordedStreams)\r\n\r\n          const getRecordedStreams = async () =>{\r\n          \r\n            axios\r\n              .get(\r\n                \"http://localhost:5000/stream/getStreamByName/\" +\r\n                  streamer.firstname +\r\n                  \" \" +\r\n                  streamer.lastname\r\n              )\r\n              .then((res) => {\r\n                  \r\n                setRecordedStreams(res.data);\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });}\r\n              useEffect(() => {\r\n                if (streamer)\r\n                getRecordedStreams();\r\n              },[streamer]);\r\n            useEffect(() => {\r\n                \r\n                const queryParams = new URLSearchParams(window.location.search);\r\n                getStream(queryParams.get(\"id\"));\r\n                \r\n                \r\n              },[]);\r\n             let iframeurl=\"\"\r\n             let name=\"\"\r\n            if (user)\r\n              name = user[\"firstName\"]+\" \"+user[\"lastName\"]\r\n             \r\n             //   console.log(\"name is \"+name)\r\n              if (stream && name)\r\n             { iframeurl=\"http://localhost:3001/react-rtc-demo?streamerName=\"+name+\"&meetId=\"+stream[\"meetingId\"]\r\n             console.log(stream)\r\n             }\r\n              \r\n    const initilindex = { index: 0, isOpen: false }\r\n\r\nconst [photoIndex, setPhotoIndex] = useState(initilindex)\r\n    return(\r\n        <Layout pathList={['portfolio details', 'full width']} pathTitle=\"full width\">\r\n    <Fragment>\r\n            <section className=\"portfolio-section port-col zoom-gallery detail-page fullwidth-portfolio\">\r\n\r\n            <div className=\"container-fluid blog-sec detail2 p-0\">\r\n        <Slider className=\"owl-carousel owl-theme portfolio-header\" {...settings1}>\r\n            {stream?(\r\n            <div className=\"item \">\r\n            <iframe id='showskill' height=\"900\" width=\"100%\" style={{\"border\":\"white\"}} title=\"Iframe Example\"  src={iframeurl}></iframe>\r\n                  </div>):<div>is not live</div>}\r\n            <div className=\"item\">\r\n                <img alt=\"\" className=\"img-fluid\" src=\"../assets/images/inner-page/blogs/2.jpg\" />\r\n            </div>\r\n        </Slider>\r\n    </div>\r\n\r\n                <div className=\"container-fluid p-t-30 px-0\">\r\n                    <div className=\"row\">\r\n                        <Slider className=\"portfolio-slider col-sm-12\" {...settings}>\r\n                            {recordedStreams.map((data, i) => {\r\n                                let imgsrc=\"images/users/\" + stream[\"_id\"] + \".jpg\";\r\n\r\n                                return (\r\n                                    <div className=\"item\" key={i}>\r\n                                        <div className=\"isotopeSelector\">\r\n                                            <div className=\"overlay\">\r\n                                                <div className=\"border-portfolio\">\r\n                                                    <a className=\"zoom_gallery\" data-source={images[photoIndex.index]}\r\n                                                        href={null} title=\"Into The Blue\"  >\r\n                                                        <img alt=\"\" className=\"img-fluid blur-up lazyload\" onClick={() =>\r\n                                                            setPhotoIndex({ ...photoIndex, index: i, isOpen: true })\r\n                                                        }\r\n                                                            src={imgsrc} />\r\n\r\n                                                    </a>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n                {photoIndex.isOpen && (\r\n                    <Lightbox\r\n                        mainSrc={images[photoIndex.index]}\r\n                        nextSrc={images[(photoIndex.index + 1) % images.length]}\r\n                        prevSrc={images[(photoIndex.index + images.length - 1) % images.length]}\r\n                        imageTitle={photoIndex.index + 1 + \"/\" + images.length}\r\n                        onCloseRequest={() => setPhotoIndex({ ...photoIndex, isOpen: false })}\r\n                        onMovePrevRequest={onMovePrev}\r\n                        onMoveNextRequest={onMoveNext}\r\n                    />\r\n                )}\r\n\r\n                <div className=\"container m-t-50\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"portfolio-detail\">\r\n                                <h3 className=\"detail-head\">project detail</h3>\r\n                                <div className=\"detail-container d-flex p-t-0\">\r\n                                    <div className=\"portfolio-left\">\r\n                                        <h5 className=\"text-left\">Musician :</h5>\r\n                                    </div>\r\n                                    <div className=\"portfolio-right\">\r\n                                        <h5>{streamer ? (streamer.firstname +\" \"+streamer.lastname):\"\"}</h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"detail-container d-flex\">\r\n                                    <div className=\"portfolio-left\">\r\n                                        <h5 className=\"text-left\">email :</h5>\r\n                                    </div>\r\n                                    <div className=\"portfolio-right\">\r\n                                        <h5>{streamer ? (streamer.email):\"\"}</h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"detail-container d-flex\">\r\n                                    <div className=\"portfolio-left\">\r\n                                        <h5 className=\"text-left\">link :</h5>\r\n                                    </div>\r\n                                    <div className=\"portfolio-right\">\r\n                                        <h5>www.abcd.com</h5>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"portfolio-detail\">\r\n                                <h3 className=\"detail-head\">about channel</h3>\r\n                                <p>{streamer? (streamer.channel_description):\"chay\"}</p>\r\n                                <div className=\"text-right m-t-10\"><a className=\"btn btn-default primary-btn radius-0\" href=\"#\">visit\r\n                    project</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <!-- pagination Start --> */}\r\n                <div className=\"pagination_sec\">\r\n                    <div className=\"content_detail__pagination cdp\">\r\n                        <ul>\r\n                            <li><a className=\"prev\" href=\"#\"><i aria-hidden=\"true\" className=\"fa fa-angle-double-left\"></i></a></li>\r\n                            <li><a className=\"active cdp_i\" href=\"#\">1</a></li>\r\n                            <li><a className=\"cdp_i\" href=\"#\">2</a></li>\r\n                            <li><a className=\"cdp_i\" href=\"#\">3</a></li>\r\n                            <li><a className=\"next\" href=\"#\"><i aria-hidden=\"true\" className=\"fa fa-angle-double-right\"></i></a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                {/* <!-- pagination End --> */}\r\n            </section>\r\n        </Fragment>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default PortfolioDetail2;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AATA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AAAA;AADA;AAEA;AAAA;AAAA;AAEA;AAEA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/NA;AACA;AACA;AACA;AACA;AAGA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AAAA;AAFA;AAjBA;AACA;AAuBA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAiBA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AASA;AACA;AAEA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAesourceRoot":""}