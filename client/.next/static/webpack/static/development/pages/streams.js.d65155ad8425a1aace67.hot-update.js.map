{"version":3,"file":"static/webpack/static\\development\\pages\\streams.js.d65155ad8425a1aace67.hot-update.js","sources":["webpack:///./pages/streams/streamCard.js"],"sourcesContent":["import React, { useState, Fragment, useEffect } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\r\nimport { AllImgData, BagsImgData, FeshionImgData, ShoesImgData, WatchImgData } from './database';\r\nimport Lightbox from 'react-image-lightbox-next';\r\nimport {Container,Row,Col} from 'reactstrap'\r\nimport axios from 'axios';\r\n\r\nconst feshion = [\r\n    require('../../public/assets/images/portfolio/1.jpg'),\r\n    require('../../public/assets/images/portfolio/2.jpg'),\r\n    require('../../public/assets/images/portfolio/3.jpg'),\r\n    require('../../public/assets/images/portfolio/4.jpg'),\r\n]\r\n\r\nconst bags = [\r\n    require('../../public/assets/images/portfolio/5.jpg'),\r\n    require('../../public/assets/images/portfolio/6.jpg'),\r\n    require('../../public/assets/images/portfolio/7.jpg'),\r\n    require('../../public/assets/images/portfolio/8.png'),\r\n]\r\n\r\nconst watches = [\r\n    require('../../public/assets/images/portfolio/11.jpg'),\r\n    require('../../public/assets/images/portfolio/10.jpg'),\r\n    require('../../public/assets/images/portfolio/12.png'),\r\n]\r\n\r\nconst shoes = [\r\n    require('../../public/assets/images/portfolio/9.jpg'),\r\n    require('../../public/assets/images/portfolio/10.jpg'),\r\n    require('../../public/assets/images/portfolio/12.png'),\r\n    require('../../public/assets/images/portfolio/8.png'),\r\n]\r\n\r\nconst AllImg = [\r\n    require('../../public/assets/images/portfolio/1.jpg'),\r\n    require('../../public/assets/images/portfolio/2.jpg'),\r\n    require('../../public/assets/images/portfolio/3.jpg'),\r\n    require('../../public/assets/images/portfolio/4.jpg'),\r\n    require('../../public/assets/images/portfolio/5.jpg'),\r\n    require('../../public/assets/images/portfolio/6.jpg'),\r\n    require('../../public/assets/images/portfolio/7.jpg'),\r\n    require('../../public/assets/images/portfolio/8.png'),\r\n    require('../../public/assets/images/portfolio/9.jpg'),\r\n    require('../../public/assets/images/portfolio/10.jpg'),\r\n    require('../../public/assets/images/portfolio/11.jpg'),\r\n    require('../../public/assets/images/portfolio/12.png'),\r\n]\r\n\r\nconst StreamCard = ({ className, title, subTitle, fluid ,streams }) => {\r\n    \r\n    const initilindex = { index: 0 }\r\n    \r\n   // const currentStreams=streams.slice(indexOfFirstStream,indexOfLastStream);\r\n\r\n    const [photoIndex, setPhotoIndex] = useState(initilindex)\r\n\r\n    const [activeTab, setActiveTab] = useState('1');\r\n   const imgsrc=\"images/users/\" + streams[\"_id\"] + \".jpg\";\r\n            \r\nconst getUrl=(id) => {\r\n    return (\"/streams/channel?id=\"+id)\r\n}\r\nconsole.log(streams);\r\n             \r\n\r\nreturn (\r\n    \r\n    <Fragment>\r\n        <section className=\"portfolio-section fullwidth-portfolio masonray-sec zoom-gallery titles\">\r\n            <div className=\"filter-section\">\r\n                <Container fluid={true}>\r\n                    <Row>\r\n                        <Col xs=\"12\">\r\n                            <Nav tabs className=\"filter-container isotopeFilters\">\r\n                                <NavItem className=\"list-inline filter\">\r\n                                    <NavLink className={activeTab == '1' ? 'active' : ''} onClick={() => setActiveTab('1')}>\r\n                                        All\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className={activeTab == '2' ? 'active' : ''} onClick={() => setActiveTab('2')}>\r\n                                        Rock n'Roll\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className={activeTab == '3' ? 'active' : ''} onClick={() => setActiveTab('3')}>\r\n                                        Classical\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className={activeTab == '4' ? 'active' : ''} onClick={() => setActiveTab('4')}>\r\n                                        Techno\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className={activeTab == '5' ? 'active' : ''} onClick={() => setActiveTab('5')}>\r\n                                        Karaoke\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n            <div className={fluid || 'container'}>\r\n                <TabContent className=\"isotopeContainer row\" activeTab={activeTab}>\r\n                    <TabPane tabId=\"1\">\r\n                        {streams.map((stream, i) => {\r\n                            return (\r\n                                <a href={getUrl(stream[\"_id\"])}>\r\n                                <div className={className} key={i}>\r\n                                    <div className=\"overlay\">\r\n                                        <div className=\"border-portfolio\">\r\n                                            <div className=\"zoom_gallery\" data-source={AllImg[photoIndex.index]}\r\n                                                title=\"\">\r\n                                                <div className=\"overlay-background\" onClick={() =>\r\n                                                    setPhotoIndex({ ...photoIndex, index: i, isOpen: true })\r\n                                                }>\r\n                                                    <i aria-hidden=\"true\" className=\"fa fa-play\"></i>\r\n                                                    \r\n                                                </div>\r\n                                                <img alt=\"\" className=\" blur-up lazyload\"\r\n                                                    src={imgsrc} \r\n                                                    style={{width:\"100%\",height:\"170px\"}}/>\r\n                                                {photoIndex.isOpen && (\r\n                                                    <Lightbox\r\n                                                        mainSrc={AllImg[photoIndex.index]}\r\n                                                        nextSrc={AllImg[(photoIndex.index + 1) % AllImg.length]}\r\n                                                        prevSrc={AllImg[(photoIndex.index + AllImg.length - 1) % AllImg.length]}\r\n                                                        imageTitle={photoIndex.index + 1 + \"/\" + AllImg.length}\r\n                                                        onCloseRequest={() => setPhotoIndex({ ...photoIndex, isOpen: false })}\r\n                                                        onMovePrevRequest={() => setPhotoIndex({...photoIndex , index:(photoIndex.index + AllImg.length - 1) % AllImg.length})}\r\n                                                        onMoveNextRequest={() => setPhotoIndex({...photoIndex , index:(photoIndex.index + 1) % AllImg.length})}\r\n                                                    />\r\n                                                )}\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    {title &&\r\n                                        <div className=\"portfolio-text\">\r\n                                            <h3 className=\"head-text\">\r\n                                                {stream[\"firstname\"]}\r\n                                            </h3>\r\n                                            <h6 className=\"head-sub-text\">\r\n                                            {stream[\"lastname\"]}\r\n                                            </h6>\r\n                                        </div>}\r\n                                </div>\r\n                                </a>\r\n                            )\r\n                        })}\r\n                    </TabPane>\r\n                    \r\n                   \r\n                    \r\n                   \r\n                </TabContent>\r\n            </div>\r\n\r\n           \r\n        </section>\r\n    </Fragment>\r\n);\r\n\r\n};\r\n\r\nexport default StreamCard;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AAOA;AAMA;AAOA;AACA;AAcgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAcA;AACA;AACA;;;;A","sourceRoot":""}