{"version":3,"file":"static/webpack/static\\development\\pages\\order\\[id].js.842d4183b65db76529a7.hot-update.js","sources":["webpack:///./pages/order/.js"],"sourcesContent":["import { ListItem } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport { useRouter } from 'next/router';\r\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\r\nimport { Card, CardBody, CardText, CardTitle, Col, ListGroup, Row } from 'reactstrap';\r\nimport MessageBox from '../../components/MessageBox';\r\n\r\nimport { Store } from '../../utils/Store';\r\n\r\n\r\n\r\nexport default function OrderScreen() {\r\n  const { state } = useContext(Store);\r\n  const { userInfo } = state;\r\n\r\n  const router = useRouter();\r\n    const { id: orderId } = router.query\r\n \r\n\r\n  const [ order,setOrder] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchOrder =  () => {\r\n      try {\r\n       \r\n          Axios.get(`http://localhost:5000/orders/${orderId}`, {\r\n          headers: { authorization: `Bearer ${userInfo.token}` },\r\n        }).then( res => {\r\n          setOrder(res.data);\r\n          console.log(\"success\");\r\n          console.log(res.data);\r\n          \r\n         \r\n         });\r\n        \r\n      } catch (err) {\r\n        \r\n      }\r\n    };\r\n\r\n    if (!userInfo) {\r\n      return alert(\"Go To Sign In\")\r\n    }\r\n    if (!order._id || (order._id && order._id !== orderId)) {\r\n      fetchOrder();\r\n    }\r\n  }, [order, userInfo, orderId]);\r\n  return (\r\n    <div>\r\n      <h5 className=\"my-3\">Order {orderId}</h5>\r\n\r\n      <Card className=\"mb-3\">\r\n            <CardBody>\r\n              <CardTitle>Shipping</CardTitle>\r\n              <CardText>\r\n                <strong>Name:</strong> {order.shippingAddress.fullName} <br />\r\n                <strong>Address: </strong> {order.shippingAddress.address},\r\n                {order.shippingAddress.city}, {order.shippingAddress.postalCode}\r\n                ,{order.shippingAddress.country}\r\n              </CardText>\r\n              {order.isDelivered ? (\r\n                <MessageBox variant=\"success\">\r\n                  Delivered at {order.deliveredAt}\r\n                </MessageBox>\r\n              ) : (\r\n                <MessageBox variant=\"danger\">Not Delivered</MessageBox>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n      \r\n    \r\n  </div>\r\n    \r\n  \r\n     \r\n  );\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AAGA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;A","sourceRoot":""}