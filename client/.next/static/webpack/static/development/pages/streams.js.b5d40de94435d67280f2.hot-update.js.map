{"version":3,"file":"static/webpack/static\\development\\pages\\streams.js.b5d40de94435d67280f2.hot-update.js","sources":["webpack:///./pages/streams/index.js"],"sourcesContent":["import React , { useEffect,useState }  from 'react';\r\nimport Layout from '../../containers/common/common-layout'\r\nimport StreamCard from './streamCard';\r\nimport axios from 'axios';\r\nimport Pagination from '../../utils/Pagination';\r\n\r\n\r\nconst PortfolioTitle4Col = () => {\r\n    const [currentPage,setCurrentPage] = useState(1);\r\n    const [streamsPerPage,setStreamsPerPage]=useState(12);\r\n    const indexOfLastStream=currentPage*streamsPerPage;\r\n    const indexOfFirstStream=indexOfLastStream - streamsPerPage;\r\n    const [streams, setStreams] = useState([]);\r\n    const currentStreams=streams.slice(indexOfFirstStream,indexOfLastStream)\r\n    const getStreams = async() =>\r\naxios.get(\"http://localhost:5000/user/getStreamers\")\r\n        .then(res => {\r\n            setStreams(res.data);\r\n         \r\n         }) .catch(function (error) {\r\n            console.log(error.response.data);              \r\n        })        \r\n        \r\n        \r\n        useEffect(() => {\r\n            getStreams();\r\n            \r\n          },[]);\r\n\r\n    const paginate= (pageNumber) => setCurrentPage(pageNumber)\r\n    return(\r\n    <Layout pathList={['portfolio basic', 'basic-4 grid with title']} pathTitle=\"Streams\">\r\n        <StreamCard \r\n            className=\"col-lg-3 col-md-4 col-sm-6 isotopeSelector\" \r\n            title=\"elyes\"\r\n            subTitle=\"Lorem Ipsum\"\r\n            streams={currentStreams}\r\n        />\r\n         <Pagination\r\n            \r\n            streamsPerPage={streamsPerPage}\r\n            totalStreams={streams.length}\r\n            paginate={paginate}\r\n            currentpage={currentPage}\r\n         ></Pagination>\r\n    </Layout>\r\n)\r\n    }\r\n\r\n\r\nexport default PortfolioTitle4Col;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAEA;;;;A","sourceRoot":""}