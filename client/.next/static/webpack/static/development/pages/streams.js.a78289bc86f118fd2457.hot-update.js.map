{"version":3,"file":"static/webpack/static\\development\\pages\\streams.js.a78289bc86f118fd2457.hot-update.js","sources":["webpack:///./pages/streams/streamCard.js"],"sourcesContent":["import React, { useState, Fragment, useEffect } from 'react';\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport { AllImgData, BagsImgData, FeshionImgData, ShoesImgData, WatchImgData } from './database';\nimport Lightbox from 'react-image-lightbox-next';\nimport {Container,Row,Col} from 'reactstrap'\nimport axios from 'axios';\n\nconst feshion = [\n    require('../../public/assets/images/portfolio/1.jpg'),\n    require('../../public/assets/images/portfolio/2.jpg'),\n    require('../../public/assets/images/portfolio/3.jpg'),\n    require('../../public/assets/images/portfolio/4.jpg'),\n]\n\nconst bags = [\n    require('../../public/assets/images/portfolio/5.jpg'),\n    require('../../public/assets/images/portfolio/6.jpg'),\n    require('../../public/assets/images/portfolio/7.jpg'),\n    require('../../public/assets/images/portfolio/8.png'),\n]\n\nconst watches = [\n    require('../../public/assets/images/portfolio/11.jpg'),\n    require('../../public/assets/images/portfolio/10.jpg'),\n    require('../../public/assets/images/portfolio/12.png'),\n]\n\nconst shoes = [\n    require('../../public/assets/images/portfolio/9.jpg'),\n    require('../../public/assets/images/portfolio/10.jpg'),\n    require('../../public/assets/images/portfolio/12.png'),\n    require('../../public/assets/images/portfolio/8.png'),\n]\n\nconst AllImg = [\n    require('../../public/assets/images/portfolio/1.jpg'),\n    require('../../public/assets/images/portfolio/2.jpg'),\n    require('../../public/assets/images/portfolio/3.jpg'),\n    require('../../public/assets/images/portfolio/4.jpg'),\n    require('../../public/assets/images/portfolio/5.jpg'),\n    require('../../public/assets/images/portfolio/6.jpg'),\n    require('../../public/assets/images/portfolio/7.jpg'),\n    require('../../public/assets/images/portfolio/8.png'),\n    require('../../public/assets/images/portfolio/9.jpg'),\n    require('../../public/assets/images/portfolio/10.jpg'),\n    require('../../public/assets/images/portfolio/11.jpg'),\n    require('../../public/assets/images/portfolio/12.png'),\n]\n\nconst StreamCard = ({ className, title, subTitle, fluid ,streams }) => {\n    \n    const initilindex = { index: 0 }\n    \n   // const currentStreams=streams.slice(indexOfFirstStream,indexOfLastStream);\n\n    const [photoIndex, setPhotoIndex] = useState(initilindex)\n\n    const [activeTab, setActiveTab] = useState('1');\n   \n            \nconst getUrl=(id) => {\n    return (\"/streams/channel?id=\"+id)\n}\n             \n\nreturn (\n    \n    <Fragment>\n        <section className=\"portfolio-section fullwidth-portfolio masonray-sec zoom-gallery titles\">\n            <div className=\"filter-section\">\n                <Container fluid={true}>\n                    <Row>\n                        <Col xs=\"12\">\n                            <Nav tabs className=\"filter-container isotopeFilters\">\n                                <NavItem className=\"list-inline filter\">\n                                    <NavLink className={activeTab == '1' ? 'active' : ''} onClick={() => setActiveTab('1')}>\n                                        All\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className={activeTab == '2' ? 'active' : ''} onClick={() => setActiveTab('2')}>\n                                        Rock n'Roll\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className={activeTab == '3' ? 'active' : ''} onClick={() => setActiveTab('3')}>\n                                        Classical\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className={activeTab == '4' ? 'active' : ''} onClick={() => setActiveTab('4')}>\n                                        Techno\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className={activeTab == '5' ? 'active' : ''} onClick={() => setActiveTab('5')}>\n                                        Karaoke\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n            <div className={fluid || 'container'}>\n                <TabContent className=\"isotopeContainer row\" activeTab={activeTab}>\n                    <TabPane tabId=\"1\">\n                        {streams.map((stream, i) => {\n                            return (\n                                <a href={getUrl(stream[\"_id\"])}>\n                                <div className={className} key={i}>\n                                    <div className=\"overlay\">\n                                        <div className=\"border-portfolio\">\n                                            <div className=\"zoom_gallery\" data-source={AllImg[photoIndex.index]}\n                                                title=\"\">\n                                                <div className=\"overlay-background\" onClick={() =>\n                                                    setPhotoIndex({ ...photoIndex, index: i, isOpen: true })\n                                                }>\n                                                    <i aria-hidden=\"true\" className=\"fa fa-play\"></i>\n                                                    \n                                                </div>\n                                                <img alt=\"\" className=\" blur-up lazyload\"\n                                                    src={stream.streamImg} \n                                                    style={{width:\"100%\",height:\"170px\"}}/>\n                                                {photoIndex.isOpen && (\n                                                    <Lightbox\n                                                        mainSrc={AllImg[photoIndex.index]}\n                                                        nextSrc={AllImg[(photoIndex.index + 1) % AllImg.length]}\n                                                        prevSrc={AllImg[(photoIndex.index + AllImg.length - 1) % AllImg.length]}\n                                                        imageTitle={photoIndex.index + 1 + \"/\" + AllImg.length}\n                                                        onCloseRequest={() => setPhotoIndex({ ...photoIndex, isOpen: false })}\n                                                        onMovePrevRequest={() => setPhotoIndex({...photoIndex , index:(photoIndex.index + AllImg.length - 1) % AllImg.length})}\n                                                        onMoveNextRequest={() => setPhotoIndex({...photoIndex , index:(photoIndex.index + 1) % AllImg.length})}\n                                                    />\n                                                )}\n\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                    {title &&\n                                        <div className=\"portfolio-text\">\n                                            <h3 className=\"head-text\">\n                                                {stream[\"streamerName\"]}\n                                            </h3>\n                                            <h6 className=\"head-sub-text\">\n                                                {subTitle}\n                                            </h6>\n                                        </div>}\n                                </div>\n                                </a>\n                            )\n                        })}\n                    </TabPane>\n                    \n                   \n                    \n                   \n                </TabContent>\n            </div>\n\n           \n        </section>\n    </Fragment>\n);\n\n};\n\nexport default StreamCard;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AAOA;AAMA;AAOA;AACA;AAcgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAcA;AACA;AACA;;;;A","sourceRoot":""}